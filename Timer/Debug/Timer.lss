
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a06  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000003  00800060  00800060  00000a7a  2**0
                  ALLOC
  2 .stab         00000cc0  00000000  00000000  00000a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000091d  00000000  00000000  0000173c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 f5 04 	jmp	0x9ea	; 0x9ea <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a3 36       	cpi	r26, 0x63	; 99
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 01 05 	jmp	0xa02	; 0xa02 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#include "Timer_interface.h"
#include "GI_Interface.h"

void callBackTimerApp(void);
int main()
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
	DIO_vdSetPintDirection(PortA, PIN0, PIN_OUTPUT);
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	41 e0       	ldi	r20, 0x01	; 1
  8a:	0e 94 28 01 	call	0x250	; 0x250 <DIO_vdSetPintDirection>
	intiNormal();
  8e:	0e 94 ae 04 	call	0x95c	; 0x95c <intiNormal>
	assignPtrCallBack(&callBackTimerApp);
  92:	80 e5       	ldi	r24, 0x50	; 80
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <assignPtrCallBack>
	GI_vdEnableGI();
  9a:	0e 94 92 04 	call	0x924	; 0x924 <GI_vdEnableGI>
  9e:	ff cf       	rjmp	.-2      	; 0x9e <main+0x22>

000000a0 <callBackTimerApp>:
	while(1);
	return 0;
}

void callBackTimerApp()
{
  a0:	df 93       	push	r29
  a2:	cf 93       	push	r28
  a4:	cd b7       	in	r28, 0x3d	; 61
  a6:	de b7       	in	r29, 0x3e	; 62
	volatile static u8 counter=0;
	counter++;
  a8:	80 91 60 00 	lds	r24, 0x0060
  ac:	8f 5f       	subi	r24, 0xFF	; 255
  ae:	80 93 60 00 	sts	0x0060, r24
	if(counter==31)
  b2:	80 91 60 00 	lds	r24, 0x0060
  b6:	8f 31       	cpi	r24, 0x1F	; 31
  b8:	51 f4       	brne	.+20     	; 0xce <callBackTimerApp+0x2e>
	{
		SET_BYTE(TCNT0_Register,123);
  ba:	e2 e5       	ldi	r30, 0x52	; 82
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	8b e7       	ldi	r24, 0x7B	; 123
  c0:	80 83       	st	Z, r24
		DIO_vdTogPinValue(PortA, PIN0);
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	0e 94 11 04 	call	0x822	; 0x822 <DIO_vdTogPinValue>
		counter=0;
  ca:	10 92 60 00 	sts	0x0060, r1
	}
}
  ce:	cf 91       	pop	r28
  d0:	df 91       	pop	r29
  d2:	08 95       	ret

000000d4 <DIO_vdSetPortDirection>:
#include "DIO_Registers.h"
//Filename_typeFunctionality

//Set Port direction
void DIO_vdSetPortDirection(u8 PortID, u8 PortDirection)
{
  d4:	df 93       	push	r29
  d6:	cf 93       	push	r28
  d8:	00 d0       	rcall	.+0      	; 0xda <DIO_vdSetPortDirection+0x6>
  da:	00 d0       	rcall	.+0      	; 0xdc <DIO_vdSetPortDirection+0x8>
  dc:	cd b7       	in	r28, 0x3d	; 61
  de:	de b7       	in	r29, 0x3e	; 62
  e0:	89 83       	std	Y+1, r24	; 0x01
  e2:	6a 83       	std	Y+2, r22	; 0x02
	//00000000
	if(PortID >= 0 && PortID <= 3)
  e4:	89 81       	ldd	r24, Y+1	; 0x01
  e6:	84 30       	cpi	r24, 0x04	; 4
  e8:	90 f5       	brcc	.+100    	; 0x14e <DIO_vdSetPortDirection+0x7a>
	{
		switch (PortID)
  ea:	89 81       	ldd	r24, Y+1	; 0x01
  ec:	28 2f       	mov	r18, r24
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	3c 83       	std	Y+4, r19	; 0x04
  f2:	2b 83       	std	Y+3, r18	; 0x03
  f4:	8b 81       	ldd	r24, Y+3	; 0x03
  f6:	9c 81       	ldd	r25, Y+4	; 0x04
  f8:	81 30       	cpi	r24, 0x01	; 1
  fa:	91 05       	cpc	r25, r1
  fc:	d1 f0       	breq	.+52     	; 0x132 <DIO_vdSetPortDirection+0x5e>
  fe:	2b 81       	ldd	r18, Y+3	; 0x03
 100:	3c 81       	ldd	r19, Y+4	; 0x04
 102:	22 30       	cpi	r18, 0x02	; 2
 104:	31 05       	cpc	r19, r1
 106:	2c f4       	brge	.+10     	; 0x112 <DIO_vdSetPortDirection+0x3e>
 108:	8b 81       	ldd	r24, Y+3	; 0x03
 10a:	9c 81       	ldd	r25, Y+4	; 0x04
 10c:	00 97       	sbiw	r24, 0x00	; 0
 10e:	61 f0       	breq	.+24     	; 0x128 <DIO_vdSetPortDirection+0x54>
 110:	1e c0       	rjmp	.+60     	; 0x14e <DIO_vdSetPortDirection+0x7a>
 112:	2b 81       	ldd	r18, Y+3	; 0x03
 114:	3c 81       	ldd	r19, Y+4	; 0x04
 116:	22 30       	cpi	r18, 0x02	; 2
 118:	31 05       	cpc	r19, r1
 11a:	81 f0       	breq	.+32     	; 0x13c <DIO_vdSetPortDirection+0x68>
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	9c 81       	ldd	r25, Y+4	; 0x04
 120:	83 30       	cpi	r24, 0x03	; 3
 122:	91 05       	cpc	r25, r1
 124:	81 f0       	breq	.+32     	; 0x146 <DIO_vdSetPortDirection+0x72>
 126:	13 c0       	rjmp	.+38     	; 0x14e <DIO_vdSetPortDirection+0x7a>
		{
			case PortA:
				DDRA_REGISTER= PortDirection;
 128:	ea e3       	ldi	r30, 0x3A	; 58
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	8a 81       	ldd	r24, Y+2	; 0x02
 12e:	80 83       	st	Z, r24
 130:	0e c0       	rjmp	.+28     	; 0x14e <DIO_vdSetPortDirection+0x7a>
				break;
			case PortB:
				DDRB_REGISTER= PortDirection;
 132:	e7 e3       	ldi	r30, 0x37	; 55
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	8a 81       	ldd	r24, Y+2	; 0x02
 138:	80 83       	st	Z, r24
 13a:	09 c0       	rjmp	.+18     	; 0x14e <DIO_vdSetPortDirection+0x7a>
				break;
			case PortC:
				DDRC_REGISTER= PortDirection;
 13c:	e4 e3       	ldi	r30, 0x34	; 52
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	8a 81       	ldd	r24, Y+2	; 0x02
 142:	80 83       	st	Z, r24
 144:	04 c0       	rjmp	.+8      	; 0x14e <DIO_vdSetPortDirection+0x7a>
				break;
			case PortD:
				DDRD_REGISTER= PortDirection;
 146:	e1 e3       	ldi	r30, 0x31	; 49
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	8a 81       	ldd	r24, Y+2	; 0x02
 14c:	80 83       	st	Z, r24
				break;
		}
	}
	else
	{}
}
 14e:	0f 90       	pop	r0
 150:	0f 90       	pop	r0
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	cf 91       	pop	r28
 158:	df 91       	pop	r29
 15a:	08 95       	ret

0000015c <DIO_vdSetPortValue>:

//Set PORT as a register value
void DIO_vdSetPortValue(u8 PortID , u8 PortValue )
{
 15c:	df 93       	push	r29
 15e:	cf 93       	push	r28
 160:	00 d0       	rcall	.+0      	; 0x162 <DIO_vdSetPortValue+0x6>
 162:	00 d0       	rcall	.+0      	; 0x164 <DIO_vdSetPortValue+0x8>
 164:	00 d0       	rcall	.+0      	; 0x166 <DIO_vdSetPortValue+0xa>
 166:	cd b7       	in	r28, 0x3d	; 61
 168:	de b7       	in	r29, 0x3e	; 62
 16a:	89 83       	std	Y+1, r24	; 0x01
 16c:	6a 83       	std	Y+2, r22	; 0x02
	if(PortID >= 0 && PortID <= 3)
 16e:	89 81       	ldd	r24, Y+1	; 0x01
 170:	84 30       	cpi	r24, 0x04	; 4
 172:	08 f0       	brcs	.+2      	; 0x176 <DIO_vdSetPortValue+0x1a>
 174:	64 c0       	rjmp	.+200    	; 0x23e <DIO_vdSetPortValue+0xe2>
	{
		if(PortValue == PORT_LOW)
 176:	8a 81       	ldd	r24, Y+2	; 0x02
 178:	88 23       	and	r24, r24
 17a:	79 f5       	brne	.+94     	; 0x1da <DIO_vdSetPortValue+0x7e>
		{
			switch(PortID)
 17c:	89 81       	ldd	r24, Y+1	; 0x01
 17e:	28 2f       	mov	r18, r24
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	3e 83       	std	Y+6, r19	; 0x06
 184:	2d 83       	std	Y+5, r18	; 0x05
 186:	8d 81       	ldd	r24, Y+5	; 0x05
 188:	9e 81       	ldd	r25, Y+6	; 0x06
 18a:	81 30       	cpi	r24, 0x01	; 1
 18c:	91 05       	cpc	r25, r1
 18e:	c9 f0       	breq	.+50     	; 0x1c2 <DIO_vdSetPortValue+0x66>
 190:	2d 81       	ldd	r18, Y+5	; 0x05
 192:	3e 81       	ldd	r19, Y+6	; 0x06
 194:	22 30       	cpi	r18, 0x02	; 2
 196:	31 05       	cpc	r19, r1
 198:	2c f4       	brge	.+10     	; 0x1a4 <DIO_vdSetPortValue+0x48>
 19a:	8d 81       	ldd	r24, Y+5	; 0x05
 19c:	9e 81       	ldd	r25, Y+6	; 0x06
 19e:	00 97       	sbiw	r24, 0x00	; 0
 1a0:	61 f0       	breq	.+24     	; 0x1ba <DIO_vdSetPortValue+0x5e>
 1a2:	4d c0       	rjmp	.+154    	; 0x23e <DIO_vdSetPortValue+0xe2>
 1a4:	2d 81       	ldd	r18, Y+5	; 0x05
 1a6:	3e 81       	ldd	r19, Y+6	; 0x06
 1a8:	22 30       	cpi	r18, 0x02	; 2
 1aa:	31 05       	cpc	r19, r1
 1ac:	71 f0       	breq	.+28     	; 0x1ca <DIO_vdSetPortValue+0x6e>
 1ae:	8d 81       	ldd	r24, Y+5	; 0x05
 1b0:	9e 81       	ldd	r25, Y+6	; 0x06
 1b2:	83 30       	cpi	r24, 0x03	; 3
 1b4:	91 05       	cpc	r25, r1
 1b6:	69 f0       	breq	.+26     	; 0x1d2 <DIO_vdSetPortValue+0x76>
 1b8:	42 c0       	rjmp	.+132    	; 0x23e <DIO_vdSetPortValue+0xe2>
			{
				case PortA:
					CLR_BYTE(PORTA_REGISTER);
 1ba:	eb e3       	ldi	r30, 0x3B	; 59
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	10 82       	st	Z, r1
 1c0:	3e c0       	rjmp	.+124    	; 0x23e <DIO_vdSetPortValue+0xe2>
					break;
				case PortB:
					CLR_BYTE(PORTB_REGISTER);
 1c2:	e8 e3       	ldi	r30, 0x38	; 56
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	10 82       	st	Z, r1
 1c8:	3a c0       	rjmp	.+116    	; 0x23e <DIO_vdSetPortValue+0xe2>
					break;
				case PortC:
					CLR_BYTE(PORTC_REGISTER);
 1ca:	e5 e3       	ldi	r30, 0x35	; 53
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	10 82       	st	Z, r1
 1d0:	36 c0       	rjmp	.+108    	; 0x23e <DIO_vdSetPortValue+0xe2>
					break;
				case PortD:
					CLR_BYTE(PORTD_REGISTER);
 1d2:	e2 e3       	ldi	r30, 0x32	; 50
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	10 82       	st	Z, r1
 1d8:	32 c0       	rjmp	.+100    	; 0x23e <DIO_vdSetPortValue+0xe2>
					break;
			}
		}
		else
		{
			switch(PortID)
 1da:	89 81       	ldd	r24, Y+1	; 0x01
 1dc:	28 2f       	mov	r18, r24
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	3c 83       	std	Y+4, r19	; 0x04
 1e2:	2b 83       	std	Y+3, r18	; 0x03
 1e4:	8b 81       	ldd	r24, Y+3	; 0x03
 1e6:	9c 81       	ldd	r25, Y+4	; 0x04
 1e8:	81 30       	cpi	r24, 0x01	; 1
 1ea:	91 05       	cpc	r25, r1
 1ec:	d1 f0       	breq	.+52     	; 0x222 <DIO_vdSetPortValue+0xc6>
 1ee:	2b 81       	ldd	r18, Y+3	; 0x03
 1f0:	3c 81       	ldd	r19, Y+4	; 0x04
 1f2:	22 30       	cpi	r18, 0x02	; 2
 1f4:	31 05       	cpc	r19, r1
 1f6:	2c f4       	brge	.+10     	; 0x202 <DIO_vdSetPortValue+0xa6>
 1f8:	8b 81       	ldd	r24, Y+3	; 0x03
 1fa:	9c 81       	ldd	r25, Y+4	; 0x04
 1fc:	00 97       	sbiw	r24, 0x00	; 0
 1fe:	61 f0       	breq	.+24     	; 0x218 <DIO_vdSetPortValue+0xbc>
 200:	1e c0       	rjmp	.+60     	; 0x23e <DIO_vdSetPortValue+0xe2>
 202:	2b 81       	ldd	r18, Y+3	; 0x03
 204:	3c 81       	ldd	r19, Y+4	; 0x04
 206:	22 30       	cpi	r18, 0x02	; 2
 208:	31 05       	cpc	r19, r1
 20a:	81 f0       	breq	.+32     	; 0x22c <DIO_vdSetPortValue+0xd0>
 20c:	8b 81       	ldd	r24, Y+3	; 0x03
 20e:	9c 81       	ldd	r25, Y+4	; 0x04
 210:	83 30       	cpi	r24, 0x03	; 3
 212:	91 05       	cpc	r25, r1
 214:	81 f0       	breq	.+32     	; 0x236 <DIO_vdSetPortValue+0xda>
 216:	13 c0       	rjmp	.+38     	; 0x23e <DIO_vdSetPortValue+0xe2>
			{
				case PortA:
					SET_BYTE(PORTA_REGISTER ,  PortValue);
 218:	eb e3       	ldi	r30, 0x3B	; 59
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	8a 81       	ldd	r24, Y+2	; 0x02
 21e:	80 83       	st	Z, r24
 220:	0e c0       	rjmp	.+28     	; 0x23e <DIO_vdSetPortValue+0xe2>
					break;
				case PortB:
					SET_BYTE(PORTB_REGISTER , PortValue);
 222:	e8 e3       	ldi	r30, 0x38	; 56
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	8a 81       	ldd	r24, Y+2	; 0x02
 228:	80 83       	st	Z, r24
 22a:	09 c0       	rjmp	.+18     	; 0x23e <DIO_vdSetPortValue+0xe2>
					break;
				case PortC:
					SET_BYTE(PORTC_REGISTER , PortValue);
 22c:	e5 e3       	ldi	r30, 0x35	; 53
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	8a 81       	ldd	r24, Y+2	; 0x02
 232:	80 83       	st	Z, r24
 234:	04 c0       	rjmp	.+8      	; 0x23e <DIO_vdSetPortValue+0xe2>
					break;
				case PortD:
					SET_BYTE(PORTD_REGISTER , PortValue);
 236:	e2 e3       	ldi	r30, 0x32	; 50
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	8a 81       	ldd	r24, Y+2	; 0x02
 23c:	80 83       	st	Z, r24
			}
		}
	}
	else
	{}
}
 23e:	26 96       	adiw	r28, 0x06	; 6
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	f8 94       	cli
 244:	de bf       	out	0x3e, r29	; 62
 246:	0f be       	out	0x3f, r0	; 63
 248:	cd bf       	out	0x3d, r28	; 61
 24a:	cf 91       	pop	r28
 24c:	df 91       	pop	r29
 24e:	08 95       	ret

00000250 <DIO_vdSetPintDirection>:

//Set pin direction
void DIO_vdSetPintDirection(u8 PortID, u8 PinID, u8 PinDirection)
{
 250:	df 93       	push	r29
 252:	cf 93       	push	r28
 254:	cd b7       	in	r28, 0x3d	; 61
 256:	de b7       	in	r29, 0x3e	; 62
 258:	27 97       	sbiw	r28, 0x07	; 7
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	89 83       	std	Y+1, r24	; 0x01
 266:	6a 83       	std	Y+2, r22	; 0x02
 268:	4b 83       	std	Y+3, r20	; 0x03
	if((PortID >= 0 && PortID <= 3) && (PinID >= 0 && PinID <= 7))
 26a:	89 81       	ldd	r24, Y+1	; 0x01
 26c:	84 30       	cpi	r24, 0x04	; 4
 26e:	08 f0       	brcs	.+2      	; 0x272 <DIO_vdSetPintDirection+0x22>
 270:	ee c0       	rjmp	.+476    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
 272:	8a 81       	ldd	r24, Y+2	; 0x02
 274:	88 30       	cpi	r24, 0x08	; 8
 276:	08 f0       	brcs	.+2      	; 0x27a <DIO_vdSetPintDirection+0x2a>
 278:	ea c0       	rjmp	.+468    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
	{
		if(PinDirection == PIN_OUTPUT)
 27a:	8b 81       	ldd	r24, Y+3	; 0x03
 27c:	81 30       	cpi	r24, 0x01	; 1
 27e:	09 f0       	breq	.+2      	; 0x282 <DIO_vdSetPintDirection+0x32>
 280:	6f c0       	rjmp	.+222    	; 0x360 <DIO_vdSetPintDirection+0x110>
		{
			switch(PortID)
 282:	89 81       	ldd	r24, Y+1	; 0x01
 284:	28 2f       	mov	r18, r24
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	3f 83       	std	Y+7, r19	; 0x07
 28a:	2e 83       	std	Y+6, r18	; 0x06
 28c:	8e 81       	ldd	r24, Y+6	; 0x06
 28e:	9f 81       	ldd	r25, Y+7	; 0x07
 290:	81 30       	cpi	r24, 0x01	; 1
 292:	91 05       	cpc	r25, r1
 294:	49 f1       	breq	.+82     	; 0x2e8 <DIO_vdSetPintDirection+0x98>
 296:	2e 81       	ldd	r18, Y+6	; 0x06
 298:	3f 81       	ldd	r19, Y+7	; 0x07
 29a:	22 30       	cpi	r18, 0x02	; 2
 29c:	31 05       	cpc	r19, r1
 29e:	2c f4       	brge	.+10     	; 0x2aa <DIO_vdSetPintDirection+0x5a>
 2a0:	8e 81       	ldd	r24, Y+6	; 0x06
 2a2:	9f 81       	ldd	r25, Y+7	; 0x07
 2a4:	00 97       	sbiw	r24, 0x00	; 0
 2a6:	61 f0       	breq	.+24     	; 0x2c0 <DIO_vdSetPintDirection+0x70>
 2a8:	d2 c0       	rjmp	.+420    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
 2aa:	2e 81       	ldd	r18, Y+6	; 0x06
 2ac:	3f 81       	ldd	r19, Y+7	; 0x07
 2ae:	22 30       	cpi	r18, 0x02	; 2
 2b0:	31 05       	cpc	r19, r1
 2b2:	71 f1       	breq	.+92     	; 0x310 <DIO_vdSetPintDirection+0xc0>
 2b4:	8e 81       	ldd	r24, Y+6	; 0x06
 2b6:	9f 81       	ldd	r25, Y+7	; 0x07
 2b8:	83 30       	cpi	r24, 0x03	; 3
 2ba:	91 05       	cpc	r25, r1
 2bc:	e9 f1       	breq	.+122    	; 0x338 <DIO_vdSetPintDirection+0xe8>
 2be:	c7 c0       	rjmp	.+398    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
			{
				case PortA:
					SET_BIT(DDRA_REGISTER , PinID);
 2c0:	aa e3       	ldi	r26, 0x3A	; 58
 2c2:	b0 e0       	ldi	r27, 0x00	; 0
 2c4:	ea e3       	ldi	r30, 0x3A	; 58
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	48 2f       	mov	r20, r24
 2cc:	8a 81       	ldd	r24, Y+2	; 0x02
 2ce:	28 2f       	mov	r18, r24
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	02 2e       	mov	r0, r18
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <DIO_vdSetPintDirection+0x8e>
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	0a 94       	dec	r0
 2e0:	e2 f7       	brpl	.-8      	; 0x2da <DIO_vdSetPintDirection+0x8a>
 2e2:	84 2b       	or	r24, r20
 2e4:	8c 93       	st	X, r24
 2e6:	b3 c0       	rjmp	.+358    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortB:
					SET_BIT(DDRB_REGISTER , PinID);
 2e8:	a7 e3       	ldi	r26, 0x37	; 55
 2ea:	b0 e0       	ldi	r27, 0x00	; 0
 2ec:	e7 e3       	ldi	r30, 0x37	; 55
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	48 2f       	mov	r20, r24
 2f4:	8a 81       	ldd	r24, Y+2	; 0x02
 2f6:	28 2f       	mov	r18, r24
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	02 2e       	mov	r0, r18
 300:	02 c0       	rjmp	.+4      	; 0x306 <DIO_vdSetPintDirection+0xb6>
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	0a 94       	dec	r0
 308:	e2 f7       	brpl	.-8      	; 0x302 <DIO_vdSetPintDirection+0xb2>
 30a:	84 2b       	or	r24, r20
 30c:	8c 93       	st	X, r24
 30e:	9f c0       	rjmp	.+318    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortC:
					SET_BIT(DDRC_REGISTER , PinID);
 310:	a4 e3       	ldi	r26, 0x34	; 52
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	e4 e3       	ldi	r30, 0x34	; 52
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	48 2f       	mov	r20, r24
 31c:	8a 81       	ldd	r24, Y+2	; 0x02
 31e:	28 2f       	mov	r18, r24
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	02 2e       	mov	r0, r18
 328:	02 c0       	rjmp	.+4      	; 0x32e <DIO_vdSetPintDirection+0xde>
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	0a 94       	dec	r0
 330:	e2 f7       	brpl	.-8      	; 0x32a <DIO_vdSetPintDirection+0xda>
 332:	84 2b       	or	r24, r20
 334:	8c 93       	st	X, r24
 336:	8b c0       	rjmp	.+278    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortD:
					SET_BIT(DDRD_REGISTER , PinID);
 338:	a1 e3       	ldi	r26, 0x31	; 49
 33a:	b0 e0       	ldi	r27, 0x00	; 0
 33c:	e1 e3       	ldi	r30, 0x31	; 49
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	80 81       	ld	r24, Z
 342:	48 2f       	mov	r20, r24
 344:	8a 81       	ldd	r24, Y+2	; 0x02
 346:	28 2f       	mov	r18, r24
 348:	30 e0       	ldi	r19, 0x00	; 0
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	02 2e       	mov	r0, r18
 350:	02 c0       	rjmp	.+4      	; 0x356 <DIO_vdSetPintDirection+0x106>
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	0a 94       	dec	r0
 358:	e2 f7       	brpl	.-8      	; 0x352 <DIO_vdSetPintDirection+0x102>
 35a:	84 2b       	or	r24, r20
 35c:	8c 93       	st	X, r24
 35e:	77 c0       	rjmp	.+238    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
					break;
			}
		}
		else if(PinDirection == PIN_INPUT)
 360:	8b 81       	ldd	r24, Y+3	; 0x03
 362:	88 23       	and	r24, r24
 364:	09 f0       	breq	.+2      	; 0x368 <DIO_vdSetPintDirection+0x118>
 366:	73 c0       	rjmp	.+230    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
		{
			switch(PortID)
 368:	89 81       	ldd	r24, Y+1	; 0x01
 36a:	28 2f       	mov	r18, r24
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	3d 83       	std	Y+5, r19	; 0x05
 370:	2c 83       	std	Y+4, r18	; 0x04
 372:	8c 81       	ldd	r24, Y+4	; 0x04
 374:	9d 81       	ldd	r25, Y+5	; 0x05
 376:	81 30       	cpi	r24, 0x01	; 1
 378:	91 05       	cpc	r25, r1
 37a:	59 f1       	breq	.+86     	; 0x3d2 <DIO_vdSetPintDirection+0x182>
 37c:	2c 81       	ldd	r18, Y+4	; 0x04
 37e:	3d 81       	ldd	r19, Y+5	; 0x05
 380:	22 30       	cpi	r18, 0x02	; 2
 382:	31 05       	cpc	r19, r1
 384:	2c f4       	brge	.+10     	; 0x390 <DIO_vdSetPintDirection+0x140>
 386:	8c 81       	ldd	r24, Y+4	; 0x04
 388:	9d 81       	ldd	r25, Y+5	; 0x05
 38a:	00 97       	sbiw	r24, 0x00	; 0
 38c:	69 f0       	breq	.+26     	; 0x3a8 <DIO_vdSetPintDirection+0x158>
 38e:	5f c0       	rjmp	.+190    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
 390:	2c 81       	ldd	r18, Y+4	; 0x04
 392:	3d 81       	ldd	r19, Y+5	; 0x05
 394:	22 30       	cpi	r18, 0x02	; 2
 396:	31 05       	cpc	r19, r1
 398:	89 f1       	breq	.+98     	; 0x3fc <DIO_vdSetPintDirection+0x1ac>
 39a:	8c 81       	ldd	r24, Y+4	; 0x04
 39c:	9d 81       	ldd	r25, Y+5	; 0x05
 39e:	83 30       	cpi	r24, 0x03	; 3
 3a0:	91 05       	cpc	r25, r1
 3a2:	09 f4       	brne	.+2      	; 0x3a6 <DIO_vdSetPintDirection+0x156>
 3a4:	40 c0       	rjmp	.+128    	; 0x426 <DIO_vdSetPintDirection+0x1d6>
 3a6:	53 c0       	rjmp	.+166    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
			{
				case PortA:
					CLR_BIT(DDRA_REGISTER , PinID);
 3a8:	aa e3       	ldi	r26, 0x3A	; 58
 3aa:	b0 e0       	ldi	r27, 0x00	; 0
 3ac:	ea e3       	ldi	r30, 0x3A	; 58
 3ae:	f0 e0       	ldi	r31, 0x00	; 0
 3b0:	80 81       	ld	r24, Z
 3b2:	48 2f       	mov	r20, r24
 3b4:	8a 81       	ldd	r24, Y+2	; 0x02
 3b6:	28 2f       	mov	r18, r24
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	02 2e       	mov	r0, r18
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <DIO_vdSetPintDirection+0x176>
 3c2:	88 0f       	add	r24, r24
 3c4:	99 1f       	adc	r25, r25
 3c6:	0a 94       	dec	r0
 3c8:	e2 f7       	brpl	.-8      	; 0x3c2 <DIO_vdSetPintDirection+0x172>
 3ca:	80 95       	com	r24
 3cc:	84 23       	and	r24, r20
 3ce:	8c 93       	st	X, r24
 3d0:	3e c0       	rjmp	.+124    	; 0x44e <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortB:
					CLR_BIT(DDRB_REGISTER , PinID);
 3d2:	a7 e3       	ldi	r26, 0x37	; 55
 3d4:	b0 e0       	ldi	r27, 0x00	; 0
 3d6:	e7 e3       	ldi	r30, 0x37	; 55
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	80 81       	ld	r24, Z
 3dc:	48 2f       	mov	r20, r24
 3de:	8a 81       	ldd	r24, Y+2	; 0x02
 3e0:	28 2f       	mov	r18, r24
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	02 2e       	mov	r0, r18
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <DIO_vdSetPintDirection+0x1a0>
 3ec:	88 0f       	add	r24, r24
 3ee:	99 1f       	adc	r25, r25
 3f0:	0a 94       	dec	r0
 3f2:	e2 f7       	brpl	.-8      	; 0x3ec <DIO_vdSetPintDirection+0x19c>
 3f4:	80 95       	com	r24
 3f6:	84 23       	and	r24, r20
 3f8:	8c 93       	st	X, r24
 3fa:	29 c0       	rjmp	.+82     	; 0x44e <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortC:
					CLR_BIT(DDRC_REGISTER , PinID);
 3fc:	a4 e3       	ldi	r26, 0x34	; 52
 3fe:	b0 e0       	ldi	r27, 0x00	; 0
 400:	e4 e3       	ldi	r30, 0x34	; 52
 402:	f0 e0       	ldi	r31, 0x00	; 0
 404:	80 81       	ld	r24, Z
 406:	48 2f       	mov	r20, r24
 408:	8a 81       	ldd	r24, Y+2	; 0x02
 40a:	28 2f       	mov	r18, r24
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	02 2e       	mov	r0, r18
 414:	02 c0       	rjmp	.+4      	; 0x41a <DIO_vdSetPintDirection+0x1ca>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	0a 94       	dec	r0
 41c:	e2 f7       	brpl	.-8      	; 0x416 <DIO_vdSetPintDirection+0x1c6>
 41e:	80 95       	com	r24
 420:	84 23       	and	r24, r20
 422:	8c 93       	st	X, r24
 424:	14 c0       	rjmp	.+40     	; 0x44e <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortD:
					CLR_BIT(DDRD_REGISTER , PinID);
 426:	a1 e3       	ldi	r26, 0x31	; 49
 428:	b0 e0       	ldi	r27, 0x00	; 0
 42a:	e1 e3       	ldi	r30, 0x31	; 49
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	80 81       	ld	r24, Z
 430:	48 2f       	mov	r20, r24
 432:	8a 81       	ldd	r24, Y+2	; 0x02
 434:	28 2f       	mov	r18, r24
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	02 2e       	mov	r0, r18
 43e:	02 c0       	rjmp	.+4      	; 0x444 <DIO_vdSetPintDirection+0x1f4>
 440:	88 0f       	add	r24, r24
 442:	99 1f       	adc	r25, r25
 444:	0a 94       	dec	r0
 446:	e2 f7       	brpl	.-8      	; 0x440 <DIO_vdSetPintDirection+0x1f0>
 448:	80 95       	com	r24
 44a:	84 23       	and	r24, r20
 44c:	8c 93       	st	X, r24
			}
		}

	}
	else {}
}
 44e:	27 96       	adiw	r28, 0x07	; 7
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	f8 94       	cli
 454:	de bf       	out	0x3e, r29	; 62
 456:	0f be       	out	0x3f, r0	; 63
 458:	cd bf       	out	0x3d, r28	; 61
 45a:	cf 91       	pop	r28
 45c:	df 91       	pop	r29
 45e:	08 95       	ret

00000460 <DIO_vdSetPinValue>:


//Set Pin value
void DIO_vdSetPinValue(u8 PortID , u8 PinID ,u8 PinValue )
{
 460:	df 93       	push	r29
 462:	cf 93       	push	r28
 464:	cd b7       	in	r28, 0x3d	; 61
 466:	de b7       	in	r29, 0x3e	; 62
 468:	27 97       	sbiw	r28, 0x07	; 7
 46a:	0f b6       	in	r0, 0x3f	; 63
 46c:	f8 94       	cli
 46e:	de bf       	out	0x3e, r29	; 62
 470:	0f be       	out	0x3f, r0	; 63
 472:	cd bf       	out	0x3d, r28	; 61
 474:	89 83       	std	Y+1, r24	; 0x01
 476:	6a 83       	std	Y+2, r22	; 0x02
 478:	4b 83       	std	Y+3, r20	; 0x03
	if((PortID >= 0 && PortID <= 3) && (PinID >= 0 && PinID <= 7))
 47a:	89 81       	ldd	r24, Y+1	; 0x01
 47c:	84 30       	cpi	r24, 0x04	; 4
 47e:	08 f0       	brcs	.+2      	; 0x482 <DIO_vdSetPinValue+0x22>
 480:	ee c0       	rjmp	.+476    	; 0x65e <DIO_vdSetPinValue+0x1fe>
 482:	8a 81       	ldd	r24, Y+2	; 0x02
 484:	88 30       	cpi	r24, 0x08	; 8
 486:	08 f0       	brcs	.+2      	; 0x48a <DIO_vdSetPinValue+0x2a>
 488:	ea c0       	rjmp	.+468    	; 0x65e <DIO_vdSetPinValue+0x1fe>
	{
		if(PinValue==PIN_High)
 48a:	8b 81       	ldd	r24, Y+3	; 0x03
 48c:	81 30       	cpi	r24, 0x01	; 1
 48e:	09 f0       	breq	.+2      	; 0x492 <DIO_vdSetPinValue+0x32>
 490:	6f c0       	rjmp	.+222    	; 0x570 <DIO_vdSetPinValue+0x110>
		{
			switch(PortID)
 492:	89 81       	ldd	r24, Y+1	; 0x01
 494:	28 2f       	mov	r18, r24
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	3f 83       	std	Y+7, r19	; 0x07
 49a:	2e 83       	std	Y+6, r18	; 0x06
 49c:	8e 81       	ldd	r24, Y+6	; 0x06
 49e:	9f 81       	ldd	r25, Y+7	; 0x07
 4a0:	81 30       	cpi	r24, 0x01	; 1
 4a2:	91 05       	cpc	r25, r1
 4a4:	49 f1       	breq	.+82     	; 0x4f8 <DIO_vdSetPinValue+0x98>
 4a6:	2e 81       	ldd	r18, Y+6	; 0x06
 4a8:	3f 81       	ldd	r19, Y+7	; 0x07
 4aa:	22 30       	cpi	r18, 0x02	; 2
 4ac:	31 05       	cpc	r19, r1
 4ae:	2c f4       	brge	.+10     	; 0x4ba <DIO_vdSetPinValue+0x5a>
 4b0:	8e 81       	ldd	r24, Y+6	; 0x06
 4b2:	9f 81       	ldd	r25, Y+7	; 0x07
 4b4:	00 97       	sbiw	r24, 0x00	; 0
 4b6:	61 f0       	breq	.+24     	; 0x4d0 <DIO_vdSetPinValue+0x70>
 4b8:	d2 c0       	rjmp	.+420    	; 0x65e <DIO_vdSetPinValue+0x1fe>
 4ba:	2e 81       	ldd	r18, Y+6	; 0x06
 4bc:	3f 81       	ldd	r19, Y+7	; 0x07
 4be:	22 30       	cpi	r18, 0x02	; 2
 4c0:	31 05       	cpc	r19, r1
 4c2:	71 f1       	breq	.+92     	; 0x520 <DIO_vdSetPinValue+0xc0>
 4c4:	8e 81       	ldd	r24, Y+6	; 0x06
 4c6:	9f 81       	ldd	r25, Y+7	; 0x07
 4c8:	83 30       	cpi	r24, 0x03	; 3
 4ca:	91 05       	cpc	r25, r1
 4cc:	e9 f1       	breq	.+122    	; 0x548 <DIO_vdSetPinValue+0xe8>
 4ce:	c7 c0       	rjmp	.+398    	; 0x65e <DIO_vdSetPinValue+0x1fe>
			{
				case PortA:
					SET_BIT(PORTA_REGISTER , PinID);
 4d0:	ab e3       	ldi	r26, 0x3B	; 59
 4d2:	b0 e0       	ldi	r27, 0x00	; 0
 4d4:	eb e3       	ldi	r30, 0x3B	; 59
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	80 81       	ld	r24, Z
 4da:	48 2f       	mov	r20, r24
 4dc:	8a 81       	ldd	r24, Y+2	; 0x02
 4de:	28 2f       	mov	r18, r24
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	02 2e       	mov	r0, r18
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <DIO_vdSetPinValue+0x8e>
 4ea:	88 0f       	add	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	0a 94       	dec	r0
 4f0:	e2 f7       	brpl	.-8      	; 0x4ea <DIO_vdSetPinValue+0x8a>
 4f2:	84 2b       	or	r24, r20
 4f4:	8c 93       	st	X, r24
 4f6:	b3 c0       	rjmp	.+358    	; 0x65e <DIO_vdSetPinValue+0x1fe>
					break;
				case PortB:
					SET_BIT(PORTB_REGISTER , PinID);
 4f8:	a8 e3       	ldi	r26, 0x38	; 56
 4fa:	b0 e0       	ldi	r27, 0x00	; 0
 4fc:	e8 e3       	ldi	r30, 0x38	; 56
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	80 81       	ld	r24, Z
 502:	48 2f       	mov	r20, r24
 504:	8a 81       	ldd	r24, Y+2	; 0x02
 506:	28 2f       	mov	r18, r24
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	02 2e       	mov	r0, r18
 510:	02 c0       	rjmp	.+4      	; 0x516 <DIO_vdSetPinValue+0xb6>
 512:	88 0f       	add	r24, r24
 514:	99 1f       	adc	r25, r25
 516:	0a 94       	dec	r0
 518:	e2 f7       	brpl	.-8      	; 0x512 <DIO_vdSetPinValue+0xb2>
 51a:	84 2b       	or	r24, r20
 51c:	8c 93       	st	X, r24
 51e:	9f c0       	rjmp	.+318    	; 0x65e <DIO_vdSetPinValue+0x1fe>
					break;
				case PortC:
					SET_BIT(PORTC_REGISTER , PinID);
 520:	a5 e3       	ldi	r26, 0x35	; 53
 522:	b0 e0       	ldi	r27, 0x00	; 0
 524:	e5 e3       	ldi	r30, 0x35	; 53
 526:	f0 e0       	ldi	r31, 0x00	; 0
 528:	80 81       	ld	r24, Z
 52a:	48 2f       	mov	r20, r24
 52c:	8a 81       	ldd	r24, Y+2	; 0x02
 52e:	28 2f       	mov	r18, r24
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	02 2e       	mov	r0, r18
 538:	02 c0       	rjmp	.+4      	; 0x53e <DIO_vdSetPinValue+0xde>
 53a:	88 0f       	add	r24, r24
 53c:	99 1f       	adc	r25, r25
 53e:	0a 94       	dec	r0
 540:	e2 f7       	brpl	.-8      	; 0x53a <DIO_vdSetPinValue+0xda>
 542:	84 2b       	or	r24, r20
 544:	8c 93       	st	X, r24
 546:	8b c0       	rjmp	.+278    	; 0x65e <DIO_vdSetPinValue+0x1fe>
					break;
				case PortD:
					SET_BIT(PORTD_REGISTER , PinID);
 548:	a2 e3       	ldi	r26, 0x32	; 50
 54a:	b0 e0       	ldi	r27, 0x00	; 0
 54c:	e2 e3       	ldi	r30, 0x32	; 50
 54e:	f0 e0       	ldi	r31, 0x00	; 0
 550:	80 81       	ld	r24, Z
 552:	48 2f       	mov	r20, r24
 554:	8a 81       	ldd	r24, Y+2	; 0x02
 556:	28 2f       	mov	r18, r24
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	02 2e       	mov	r0, r18
 560:	02 c0       	rjmp	.+4      	; 0x566 <DIO_vdSetPinValue+0x106>
 562:	88 0f       	add	r24, r24
 564:	99 1f       	adc	r25, r25
 566:	0a 94       	dec	r0
 568:	e2 f7       	brpl	.-8      	; 0x562 <DIO_vdSetPinValue+0x102>
 56a:	84 2b       	or	r24, r20
 56c:	8c 93       	st	X, r24
 56e:	77 c0       	rjmp	.+238    	; 0x65e <DIO_vdSetPinValue+0x1fe>
					break;
			}
		}
		else if(PinValue==PIN_LOW)
 570:	8b 81       	ldd	r24, Y+3	; 0x03
 572:	88 23       	and	r24, r24
 574:	09 f0       	breq	.+2      	; 0x578 <DIO_vdSetPinValue+0x118>
 576:	73 c0       	rjmp	.+230    	; 0x65e <DIO_vdSetPinValue+0x1fe>
		{
			switch(PortID)
 578:	89 81       	ldd	r24, Y+1	; 0x01
 57a:	28 2f       	mov	r18, r24
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	3d 83       	std	Y+5, r19	; 0x05
 580:	2c 83       	std	Y+4, r18	; 0x04
 582:	8c 81       	ldd	r24, Y+4	; 0x04
 584:	9d 81       	ldd	r25, Y+5	; 0x05
 586:	81 30       	cpi	r24, 0x01	; 1
 588:	91 05       	cpc	r25, r1
 58a:	59 f1       	breq	.+86     	; 0x5e2 <DIO_vdSetPinValue+0x182>
 58c:	2c 81       	ldd	r18, Y+4	; 0x04
 58e:	3d 81       	ldd	r19, Y+5	; 0x05
 590:	22 30       	cpi	r18, 0x02	; 2
 592:	31 05       	cpc	r19, r1
 594:	2c f4       	brge	.+10     	; 0x5a0 <DIO_vdSetPinValue+0x140>
 596:	8c 81       	ldd	r24, Y+4	; 0x04
 598:	9d 81       	ldd	r25, Y+5	; 0x05
 59a:	00 97       	sbiw	r24, 0x00	; 0
 59c:	69 f0       	breq	.+26     	; 0x5b8 <DIO_vdSetPinValue+0x158>
 59e:	5f c0       	rjmp	.+190    	; 0x65e <DIO_vdSetPinValue+0x1fe>
 5a0:	2c 81       	ldd	r18, Y+4	; 0x04
 5a2:	3d 81       	ldd	r19, Y+5	; 0x05
 5a4:	22 30       	cpi	r18, 0x02	; 2
 5a6:	31 05       	cpc	r19, r1
 5a8:	89 f1       	breq	.+98     	; 0x60c <DIO_vdSetPinValue+0x1ac>
 5aa:	8c 81       	ldd	r24, Y+4	; 0x04
 5ac:	9d 81       	ldd	r25, Y+5	; 0x05
 5ae:	83 30       	cpi	r24, 0x03	; 3
 5b0:	91 05       	cpc	r25, r1
 5b2:	09 f4       	brne	.+2      	; 0x5b6 <DIO_vdSetPinValue+0x156>
 5b4:	40 c0       	rjmp	.+128    	; 0x636 <DIO_vdSetPinValue+0x1d6>
 5b6:	53 c0       	rjmp	.+166    	; 0x65e <DIO_vdSetPinValue+0x1fe>
			{
				case PortA:
					CLR_BIT(PORTA_REGISTER , PinID);
 5b8:	ab e3       	ldi	r26, 0x3B	; 59
 5ba:	b0 e0       	ldi	r27, 0x00	; 0
 5bc:	eb e3       	ldi	r30, 0x3B	; 59
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	80 81       	ld	r24, Z
 5c2:	48 2f       	mov	r20, r24
 5c4:	8a 81       	ldd	r24, Y+2	; 0x02
 5c6:	28 2f       	mov	r18, r24
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	81 e0       	ldi	r24, 0x01	; 1
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	02 2e       	mov	r0, r18
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <DIO_vdSetPinValue+0x176>
 5d2:	88 0f       	add	r24, r24
 5d4:	99 1f       	adc	r25, r25
 5d6:	0a 94       	dec	r0
 5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <DIO_vdSetPinValue+0x172>
 5da:	80 95       	com	r24
 5dc:	84 23       	and	r24, r20
 5de:	8c 93       	st	X, r24
 5e0:	3e c0       	rjmp	.+124    	; 0x65e <DIO_vdSetPinValue+0x1fe>
					break;
				case PortB:
					CLR_BIT(PORTB_REGISTER , PinID);
 5e2:	a8 e3       	ldi	r26, 0x38	; 56
 5e4:	b0 e0       	ldi	r27, 0x00	; 0
 5e6:	e8 e3       	ldi	r30, 0x38	; 56
 5e8:	f0 e0       	ldi	r31, 0x00	; 0
 5ea:	80 81       	ld	r24, Z
 5ec:	48 2f       	mov	r20, r24
 5ee:	8a 81       	ldd	r24, Y+2	; 0x02
 5f0:	28 2f       	mov	r18, r24
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	02 2e       	mov	r0, r18
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <DIO_vdSetPinValue+0x1a0>
 5fc:	88 0f       	add	r24, r24
 5fe:	99 1f       	adc	r25, r25
 600:	0a 94       	dec	r0
 602:	e2 f7       	brpl	.-8      	; 0x5fc <DIO_vdSetPinValue+0x19c>
 604:	80 95       	com	r24
 606:	84 23       	and	r24, r20
 608:	8c 93       	st	X, r24
 60a:	29 c0       	rjmp	.+82     	; 0x65e <DIO_vdSetPinValue+0x1fe>
					break;
				case PortC:
					CLR_BIT(PORTC_REGISTER , PinID);
 60c:	a5 e3       	ldi	r26, 0x35	; 53
 60e:	b0 e0       	ldi	r27, 0x00	; 0
 610:	e5 e3       	ldi	r30, 0x35	; 53
 612:	f0 e0       	ldi	r31, 0x00	; 0
 614:	80 81       	ld	r24, Z
 616:	48 2f       	mov	r20, r24
 618:	8a 81       	ldd	r24, Y+2	; 0x02
 61a:	28 2f       	mov	r18, r24
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	81 e0       	ldi	r24, 0x01	; 1
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	02 2e       	mov	r0, r18
 624:	02 c0       	rjmp	.+4      	; 0x62a <DIO_vdSetPinValue+0x1ca>
 626:	88 0f       	add	r24, r24
 628:	99 1f       	adc	r25, r25
 62a:	0a 94       	dec	r0
 62c:	e2 f7       	brpl	.-8      	; 0x626 <DIO_vdSetPinValue+0x1c6>
 62e:	80 95       	com	r24
 630:	84 23       	and	r24, r20
 632:	8c 93       	st	X, r24
 634:	14 c0       	rjmp	.+40     	; 0x65e <DIO_vdSetPinValue+0x1fe>
					break;
				case PortD:
					CLR_BIT(PORTD_REGISTER , PinID);
 636:	a2 e3       	ldi	r26, 0x32	; 50
 638:	b0 e0       	ldi	r27, 0x00	; 0
 63a:	e2 e3       	ldi	r30, 0x32	; 50
 63c:	f0 e0       	ldi	r31, 0x00	; 0
 63e:	80 81       	ld	r24, Z
 640:	48 2f       	mov	r20, r24
 642:	8a 81       	ldd	r24, Y+2	; 0x02
 644:	28 2f       	mov	r18, r24
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	02 2e       	mov	r0, r18
 64e:	02 c0       	rjmp	.+4      	; 0x654 <DIO_vdSetPinValue+0x1f4>
 650:	88 0f       	add	r24, r24
 652:	99 1f       	adc	r25, r25
 654:	0a 94       	dec	r0
 656:	e2 f7       	brpl	.-8      	; 0x650 <DIO_vdSetPinValue+0x1f0>
 658:	80 95       	com	r24
 65a:	84 23       	and	r24, r20
 65c:	8c 93       	st	X, r24
		}
		else
		{}
	}
	else {}
}
 65e:	27 96       	adiw	r28, 0x07	; 7
 660:	0f b6       	in	r0, 0x3f	; 63
 662:	f8 94       	cli
 664:	de bf       	out	0x3e, r29	; 62
 666:	0f be       	out	0x3f, r0	; 63
 668:	cd bf       	out	0x3d, r28	; 61
 66a:	cf 91       	pop	r28
 66c:	df 91       	pop	r29
 66e:	08 95       	ret

00000670 <DIO_u8GetPinValue>:

//Get PIN value
u8 DIO_u8GetPinValue(u8 PortID, u8 PinID)
{
 670:	df 93       	push	r29
 672:	cf 93       	push	r28
 674:	00 d0       	rcall	.+0      	; 0x676 <DIO_u8GetPinValue+0x6>
 676:	00 d0       	rcall	.+0      	; 0x678 <DIO_u8GetPinValue+0x8>
 678:	00 d0       	rcall	.+0      	; 0x67a <DIO_u8GetPinValue+0xa>
 67a:	cd b7       	in	r28, 0x3d	; 61
 67c:	de b7       	in	r29, 0x3e	; 62
 67e:	89 83       	std	Y+1, r24	; 0x01
 680:	6a 83       	std	Y+2, r22	; 0x02
	if((PortID >= 0 && PortID <= 3) && (PinID >= 0 && PinID <= 7))
 682:	89 81       	ldd	r24, Y+1	; 0x01
 684:	84 30       	cpi	r24, 0x04	; 4
 686:	08 f0       	brcs	.+2      	; 0x68a <DIO_u8GetPinValue+0x1a>
 688:	70 c0       	rjmp	.+224    	; 0x76a <DIO_u8GetPinValue+0xfa>
 68a:	8a 81       	ldd	r24, Y+2	; 0x02
 68c:	88 30       	cpi	r24, 0x08	; 8
 68e:	08 f0       	brcs	.+2      	; 0x692 <DIO_u8GetPinValue+0x22>
 690:	6c c0       	rjmp	.+216    	; 0x76a <DIO_u8GetPinValue+0xfa>
	{
		switch(PortID)
 692:	89 81       	ldd	r24, Y+1	; 0x01
 694:	28 2f       	mov	r18, r24
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	3d 83       	std	Y+5, r19	; 0x05
 69a:	2c 83       	std	Y+4, r18	; 0x04
 69c:	4c 81       	ldd	r20, Y+4	; 0x04
 69e:	5d 81       	ldd	r21, Y+5	; 0x05
 6a0:	41 30       	cpi	r20, 0x01	; 1
 6a2:	51 05       	cpc	r21, r1
 6a4:	49 f1       	breq	.+82     	; 0x6f8 <DIO_u8GetPinValue+0x88>
 6a6:	8c 81       	ldd	r24, Y+4	; 0x04
 6a8:	9d 81       	ldd	r25, Y+5	; 0x05
 6aa:	82 30       	cpi	r24, 0x02	; 2
 6ac:	91 05       	cpc	r25, r1
 6ae:	34 f4       	brge	.+12     	; 0x6bc <DIO_u8GetPinValue+0x4c>
 6b0:	2c 81       	ldd	r18, Y+4	; 0x04
 6b2:	3d 81       	ldd	r19, Y+5	; 0x05
 6b4:	21 15       	cp	r18, r1
 6b6:	31 05       	cpc	r19, r1
 6b8:	61 f0       	breq	.+24     	; 0x6d2 <DIO_u8GetPinValue+0x62>
 6ba:	57 c0       	rjmp	.+174    	; 0x76a <DIO_u8GetPinValue+0xfa>
 6bc:	4c 81       	ldd	r20, Y+4	; 0x04
 6be:	5d 81       	ldd	r21, Y+5	; 0x05
 6c0:	42 30       	cpi	r20, 0x02	; 2
 6c2:	51 05       	cpc	r21, r1
 6c4:	61 f1       	breq	.+88     	; 0x71e <DIO_u8GetPinValue+0xae>
 6c6:	8c 81       	ldd	r24, Y+4	; 0x04
 6c8:	9d 81       	ldd	r25, Y+5	; 0x05
 6ca:	83 30       	cpi	r24, 0x03	; 3
 6cc:	91 05       	cpc	r25, r1
 6ce:	d1 f1       	breq	.+116    	; 0x744 <DIO_u8GetPinValue+0xd4>
 6d0:	4c c0       	rjmp	.+152    	; 0x76a <DIO_u8GetPinValue+0xfa>
		{
			case PortA:
				return GET_BIT(PINA_REGISTER , PinID);
 6d2:	e9 e3       	ldi	r30, 0x39	; 57
 6d4:	f0 e0       	ldi	r31, 0x00	; 0
 6d6:	80 81       	ld	r24, Z
 6d8:	28 2f       	mov	r18, r24
 6da:	30 e0       	ldi	r19, 0x00	; 0
 6dc:	8a 81       	ldd	r24, Y+2	; 0x02
 6de:	88 2f       	mov	r24, r24
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	a9 01       	movw	r20, r18
 6e4:	02 c0       	rjmp	.+4      	; 0x6ea <DIO_u8GetPinValue+0x7a>
 6e6:	55 95       	asr	r21
 6e8:	47 95       	ror	r20
 6ea:	8a 95       	dec	r24
 6ec:	e2 f7       	brpl	.-8      	; 0x6e6 <DIO_u8GetPinValue+0x76>
 6ee:	ca 01       	movw	r24, r20
 6f0:	58 2f       	mov	r21, r24
 6f2:	51 70       	andi	r21, 0x01	; 1
 6f4:	5b 83       	std	Y+3, r21	; 0x03
 6f6:	3a c0       	rjmp	.+116    	; 0x76c <DIO_u8GetPinValue+0xfc>
			case PortB:
				return GET_BIT(PINB_REGISTER , PinID);
 6f8:	e6 e3       	ldi	r30, 0x36	; 54
 6fa:	f0 e0       	ldi	r31, 0x00	; 0
 6fc:	80 81       	ld	r24, Z
 6fe:	28 2f       	mov	r18, r24
 700:	30 e0       	ldi	r19, 0x00	; 0
 702:	8a 81       	ldd	r24, Y+2	; 0x02
 704:	88 2f       	mov	r24, r24
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	a9 01       	movw	r20, r18
 70a:	02 c0       	rjmp	.+4      	; 0x710 <DIO_u8GetPinValue+0xa0>
 70c:	55 95       	asr	r21
 70e:	47 95       	ror	r20
 710:	8a 95       	dec	r24
 712:	e2 f7       	brpl	.-8      	; 0x70c <DIO_u8GetPinValue+0x9c>
 714:	ca 01       	movw	r24, r20
 716:	58 2f       	mov	r21, r24
 718:	51 70       	andi	r21, 0x01	; 1
 71a:	5b 83       	std	Y+3, r21	; 0x03
 71c:	27 c0       	rjmp	.+78     	; 0x76c <DIO_u8GetPinValue+0xfc>
			case PortC:
				return GET_BIT(PINC_REGISTER , PinID);
 71e:	e3 e3       	ldi	r30, 0x33	; 51
 720:	f0 e0       	ldi	r31, 0x00	; 0
 722:	80 81       	ld	r24, Z
 724:	28 2f       	mov	r18, r24
 726:	30 e0       	ldi	r19, 0x00	; 0
 728:	8a 81       	ldd	r24, Y+2	; 0x02
 72a:	88 2f       	mov	r24, r24
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	a9 01       	movw	r20, r18
 730:	02 c0       	rjmp	.+4      	; 0x736 <DIO_u8GetPinValue+0xc6>
 732:	55 95       	asr	r21
 734:	47 95       	ror	r20
 736:	8a 95       	dec	r24
 738:	e2 f7       	brpl	.-8      	; 0x732 <DIO_u8GetPinValue+0xc2>
 73a:	ca 01       	movw	r24, r20
 73c:	58 2f       	mov	r21, r24
 73e:	51 70       	andi	r21, 0x01	; 1
 740:	5b 83       	std	Y+3, r21	; 0x03
 742:	14 c0       	rjmp	.+40     	; 0x76c <DIO_u8GetPinValue+0xfc>
			case PortD:
				return GET_BIT(PIND_REGISTER , PinID);
 744:	e0 e3       	ldi	r30, 0x30	; 48
 746:	f0 e0       	ldi	r31, 0x00	; 0
 748:	80 81       	ld	r24, Z
 74a:	28 2f       	mov	r18, r24
 74c:	30 e0       	ldi	r19, 0x00	; 0
 74e:	8a 81       	ldd	r24, Y+2	; 0x02
 750:	88 2f       	mov	r24, r24
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	a9 01       	movw	r20, r18
 756:	02 c0       	rjmp	.+4      	; 0x75c <DIO_u8GetPinValue+0xec>
 758:	55 95       	asr	r21
 75a:	47 95       	ror	r20
 75c:	8a 95       	dec	r24
 75e:	e2 f7       	brpl	.-8      	; 0x758 <DIO_u8GetPinValue+0xe8>
 760:	ca 01       	movw	r24, r20
 762:	58 2f       	mov	r21, r24
 764:	51 70       	andi	r21, 0x01	; 1
 766:	5b 83       	std	Y+3, r21	; 0x03
 768:	01 c0       	rjmp	.+2      	; 0x76c <DIO_u8GetPinValue+0xfc>
 76a:	02 c0       	rjmp	.+4      	; 0x770 <DIO_u8GetPinValue+0x100>
		}
	}
	else
	{}
	//return 0;
}
 76c:	8b 81       	ldd	r24, Y+3	; 0x03
 76e:	8e 83       	std	Y+6, r24	; 0x06
 770:	8e 81       	ldd	r24, Y+6	; 0x06
 772:	26 96       	adiw	r28, 0x06	; 6
 774:	0f b6       	in	r0, 0x3f	; 63
 776:	f8 94       	cli
 778:	de bf       	out	0x3e, r29	; 62
 77a:	0f be       	out	0x3f, r0	; 63
 77c:	cd bf       	out	0x3d, r28	; 61
 77e:	cf 91       	pop	r28
 780:	df 91       	pop	r29
 782:	08 95       	ret

00000784 <DIO_vdTogPortValue>:

//Toggle port value
void DIO_vdTogPortValue(u8 PortID)
{
 784:	df 93       	push	r29
 786:	cf 93       	push	r28
 788:	00 d0       	rcall	.+0      	; 0x78a <DIO_vdTogPortValue+0x6>
 78a:	0f 92       	push	r0
 78c:	cd b7       	in	r28, 0x3d	; 61
 78e:	de b7       	in	r29, 0x3e	; 62
 790:	89 83       	std	Y+1, r24	; 0x01
	if(PortID >= 0 && PortID <= 3)
 792:	89 81       	ldd	r24, Y+1	; 0x01
 794:	84 30       	cpi	r24, 0x04	; 4
 796:	08 f0       	brcs	.+2      	; 0x79a <DIO_vdTogPortValue+0x16>
 798:	3e c0       	rjmp	.+124    	; 0x816 <DIO_vdTogPortValue+0x92>
	{
		switch(PortID)
 79a:	89 81       	ldd	r24, Y+1	; 0x01
 79c:	28 2f       	mov	r18, r24
 79e:	30 e0       	ldi	r19, 0x00	; 0
 7a0:	3b 83       	std	Y+3, r19	; 0x03
 7a2:	2a 83       	std	Y+2, r18	; 0x02
 7a4:	8a 81       	ldd	r24, Y+2	; 0x02
 7a6:	9b 81       	ldd	r25, Y+3	; 0x03
 7a8:	81 30       	cpi	r24, 0x01	; 1
 7aa:	91 05       	cpc	r25, r1
 7ac:	e9 f0       	breq	.+58     	; 0x7e8 <DIO_vdTogPortValue+0x64>
 7ae:	2a 81       	ldd	r18, Y+2	; 0x02
 7b0:	3b 81       	ldd	r19, Y+3	; 0x03
 7b2:	22 30       	cpi	r18, 0x02	; 2
 7b4:	31 05       	cpc	r19, r1
 7b6:	2c f4       	brge	.+10     	; 0x7c2 <DIO_vdTogPortValue+0x3e>
 7b8:	8a 81       	ldd	r24, Y+2	; 0x02
 7ba:	9b 81       	ldd	r25, Y+3	; 0x03
 7bc:	00 97       	sbiw	r24, 0x00	; 0
 7be:	61 f0       	breq	.+24     	; 0x7d8 <DIO_vdTogPortValue+0x54>
 7c0:	2a c0       	rjmp	.+84     	; 0x816 <DIO_vdTogPortValue+0x92>
 7c2:	2a 81       	ldd	r18, Y+2	; 0x02
 7c4:	3b 81       	ldd	r19, Y+3	; 0x03
 7c6:	22 30       	cpi	r18, 0x02	; 2
 7c8:	31 05       	cpc	r19, r1
 7ca:	b1 f0       	breq	.+44     	; 0x7f8 <DIO_vdTogPortValue+0x74>
 7cc:	8a 81       	ldd	r24, Y+2	; 0x02
 7ce:	9b 81       	ldd	r25, Y+3	; 0x03
 7d0:	83 30       	cpi	r24, 0x03	; 3
 7d2:	91 05       	cpc	r25, r1
 7d4:	c9 f0       	breq	.+50     	; 0x808 <DIO_vdTogPortValue+0x84>
 7d6:	1f c0       	rjmp	.+62     	; 0x816 <DIO_vdTogPortValue+0x92>
		{
			case PortA:
				TOG_BYTE(PORTA_REGISTER);
 7d8:	ab e3       	ldi	r26, 0x3B	; 59
 7da:	b0 e0       	ldi	r27, 0x00	; 0
 7dc:	eb e3       	ldi	r30, 0x3B	; 59
 7de:	f0 e0       	ldi	r31, 0x00	; 0
 7e0:	80 81       	ld	r24, Z
 7e2:	80 95       	com	r24
 7e4:	8c 93       	st	X, r24
 7e6:	17 c0       	rjmp	.+46     	; 0x816 <DIO_vdTogPortValue+0x92>
				break;
			case PortB:
				TOG_BYTE(PORTB_REGISTER);
 7e8:	a8 e3       	ldi	r26, 0x38	; 56
 7ea:	b0 e0       	ldi	r27, 0x00	; 0
 7ec:	e8 e3       	ldi	r30, 0x38	; 56
 7ee:	f0 e0       	ldi	r31, 0x00	; 0
 7f0:	80 81       	ld	r24, Z
 7f2:	80 95       	com	r24
 7f4:	8c 93       	st	X, r24
 7f6:	0f c0       	rjmp	.+30     	; 0x816 <DIO_vdTogPortValue+0x92>
				break;
			case PortC:
				TOG_BYTE(PORTC_REGISTER);
 7f8:	a5 e3       	ldi	r26, 0x35	; 53
 7fa:	b0 e0       	ldi	r27, 0x00	; 0
 7fc:	e5 e3       	ldi	r30, 0x35	; 53
 7fe:	f0 e0       	ldi	r31, 0x00	; 0
 800:	80 81       	ld	r24, Z
 802:	80 95       	com	r24
 804:	8c 93       	st	X, r24
 806:	07 c0       	rjmp	.+14     	; 0x816 <DIO_vdTogPortValue+0x92>
				break;
			case PortD:
				TOG_BYTE(PORTD_REGISTER);
 808:	a2 e3       	ldi	r26, 0x32	; 50
 80a:	b0 e0       	ldi	r27, 0x00	; 0
 80c:	e2 e3       	ldi	r30, 0x32	; 50
 80e:	f0 e0       	ldi	r31, 0x00	; 0
 810:	80 81       	ld	r24, Z
 812:	80 95       	com	r24
 814:	8c 93       	st	X, r24
				break;
		}
	}
	else{}
}
 816:	0f 90       	pop	r0
 818:	0f 90       	pop	r0
 81a:	0f 90       	pop	r0
 81c:	cf 91       	pop	r28
 81e:	df 91       	pop	r29
 820:	08 95       	ret

00000822 <DIO_vdTogPinValue>:

//Toggle pin value
void DIO_vdTogPinValue(u8 PortID, u8 PinID)
{
 822:	df 93       	push	r29
 824:	cf 93       	push	r28
 826:	00 d0       	rcall	.+0      	; 0x828 <DIO_vdTogPinValue+0x6>
 828:	00 d0       	rcall	.+0      	; 0x82a <DIO_vdTogPinValue+0x8>
 82a:	cd b7       	in	r28, 0x3d	; 61
 82c:	de b7       	in	r29, 0x3e	; 62
 82e:	89 83       	std	Y+1, r24	; 0x01
 830:	6a 83       	std	Y+2, r22	; 0x02
	if(PortID >= 0 && PortID <= 3)
 832:	89 81       	ldd	r24, Y+1	; 0x01
 834:	84 30       	cpi	r24, 0x04	; 4
 836:	08 f0       	brcs	.+2      	; 0x83a <DIO_vdTogPinValue+0x18>
 838:	6e c0       	rjmp	.+220    	; 0x916 <__stack+0xb7>
	{
		switch(PortID)
 83a:	89 81       	ldd	r24, Y+1	; 0x01
 83c:	28 2f       	mov	r18, r24
 83e:	30 e0       	ldi	r19, 0x00	; 0
 840:	3c 83       	std	Y+4, r19	; 0x04
 842:	2b 83       	std	Y+3, r18	; 0x03
 844:	8b 81       	ldd	r24, Y+3	; 0x03
 846:	9c 81       	ldd	r25, Y+4	; 0x04
 848:	81 30       	cpi	r24, 0x01	; 1
 84a:	91 05       	cpc	r25, r1
 84c:	49 f1       	breq	.+82     	; 0x8a0 <__stack+0x41>
 84e:	2b 81       	ldd	r18, Y+3	; 0x03
 850:	3c 81       	ldd	r19, Y+4	; 0x04
 852:	22 30       	cpi	r18, 0x02	; 2
 854:	31 05       	cpc	r19, r1
 856:	2c f4       	brge	.+10     	; 0x862 <__stack+0x3>
 858:	8b 81       	ldd	r24, Y+3	; 0x03
 85a:	9c 81       	ldd	r25, Y+4	; 0x04
 85c:	00 97       	sbiw	r24, 0x00	; 0
 85e:	61 f0       	breq	.+24     	; 0x878 <__stack+0x19>
 860:	5a c0       	rjmp	.+180    	; 0x916 <__stack+0xb7>
 862:	2b 81       	ldd	r18, Y+3	; 0x03
 864:	3c 81       	ldd	r19, Y+4	; 0x04
 866:	22 30       	cpi	r18, 0x02	; 2
 868:	31 05       	cpc	r19, r1
 86a:	71 f1       	breq	.+92     	; 0x8c8 <__stack+0x69>
 86c:	8b 81       	ldd	r24, Y+3	; 0x03
 86e:	9c 81       	ldd	r25, Y+4	; 0x04
 870:	83 30       	cpi	r24, 0x03	; 3
 872:	91 05       	cpc	r25, r1
 874:	e9 f1       	breq	.+122    	; 0x8f0 <__stack+0x91>
 876:	4f c0       	rjmp	.+158    	; 0x916 <__stack+0xb7>
		{
			case PortA:
				TOG_BIT(PORTA_REGISTER, PinID);
 878:	ab e3       	ldi	r26, 0x3B	; 59
 87a:	b0 e0       	ldi	r27, 0x00	; 0
 87c:	eb e3       	ldi	r30, 0x3B	; 59
 87e:	f0 e0       	ldi	r31, 0x00	; 0
 880:	80 81       	ld	r24, Z
 882:	48 2f       	mov	r20, r24
 884:	8a 81       	ldd	r24, Y+2	; 0x02
 886:	28 2f       	mov	r18, r24
 888:	30 e0       	ldi	r19, 0x00	; 0
 88a:	81 e0       	ldi	r24, 0x01	; 1
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	02 2e       	mov	r0, r18
 890:	02 c0       	rjmp	.+4      	; 0x896 <__stack+0x37>
 892:	88 0f       	add	r24, r24
 894:	99 1f       	adc	r25, r25
 896:	0a 94       	dec	r0
 898:	e2 f7       	brpl	.-8      	; 0x892 <__stack+0x33>
 89a:	84 27       	eor	r24, r20
 89c:	8c 93       	st	X, r24
 89e:	3b c0       	rjmp	.+118    	; 0x916 <__stack+0xb7>
				break;
			case PortB:
				TOG_BIT(PORTB_REGISTER, PinID);
 8a0:	a8 e3       	ldi	r26, 0x38	; 56
 8a2:	b0 e0       	ldi	r27, 0x00	; 0
 8a4:	e8 e3       	ldi	r30, 0x38	; 56
 8a6:	f0 e0       	ldi	r31, 0x00	; 0
 8a8:	80 81       	ld	r24, Z
 8aa:	48 2f       	mov	r20, r24
 8ac:	8a 81       	ldd	r24, Y+2	; 0x02
 8ae:	28 2f       	mov	r18, r24
 8b0:	30 e0       	ldi	r19, 0x00	; 0
 8b2:	81 e0       	ldi	r24, 0x01	; 1
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	02 2e       	mov	r0, r18
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <__stack+0x5f>
 8ba:	88 0f       	add	r24, r24
 8bc:	99 1f       	adc	r25, r25
 8be:	0a 94       	dec	r0
 8c0:	e2 f7       	brpl	.-8      	; 0x8ba <__stack+0x5b>
 8c2:	84 27       	eor	r24, r20
 8c4:	8c 93       	st	X, r24
 8c6:	27 c0       	rjmp	.+78     	; 0x916 <__stack+0xb7>
				break;
			case PortC:
				TOG_BIT(PORTC_REGISTER, PinID);
 8c8:	a5 e3       	ldi	r26, 0x35	; 53
 8ca:	b0 e0       	ldi	r27, 0x00	; 0
 8cc:	e5 e3       	ldi	r30, 0x35	; 53
 8ce:	f0 e0       	ldi	r31, 0x00	; 0
 8d0:	80 81       	ld	r24, Z
 8d2:	48 2f       	mov	r20, r24
 8d4:	8a 81       	ldd	r24, Y+2	; 0x02
 8d6:	28 2f       	mov	r18, r24
 8d8:	30 e0       	ldi	r19, 0x00	; 0
 8da:	81 e0       	ldi	r24, 0x01	; 1
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	02 2e       	mov	r0, r18
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <__stack+0x87>
 8e2:	88 0f       	add	r24, r24
 8e4:	99 1f       	adc	r25, r25
 8e6:	0a 94       	dec	r0
 8e8:	e2 f7       	brpl	.-8      	; 0x8e2 <__stack+0x83>
 8ea:	84 27       	eor	r24, r20
 8ec:	8c 93       	st	X, r24
 8ee:	13 c0       	rjmp	.+38     	; 0x916 <__stack+0xb7>
				break;
			case PortD:
				TOG_BIT(PORTD_REGISTER, PinID);
 8f0:	a2 e3       	ldi	r26, 0x32	; 50
 8f2:	b0 e0       	ldi	r27, 0x00	; 0
 8f4:	e2 e3       	ldi	r30, 0x32	; 50
 8f6:	f0 e0       	ldi	r31, 0x00	; 0
 8f8:	80 81       	ld	r24, Z
 8fa:	48 2f       	mov	r20, r24
 8fc:	8a 81       	ldd	r24, Y+2	; 0x02
 8fe:	28 2f       	mov	r18, r24
 900:	30 e0       	ldi	r19, 0x00	; 0
 902:	81 e0       	ldi	r24, 0x01	; 1
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	02 2e       	mov	r0, r18
 908:	02 c0       	rjmp	.+4      	; 0x90e <__stack+0xaf>
 90a:	88 0f       	add	r24, r24
 90c:	99 1f       	adc	r25, r25
 90e:	0a 94       	dec	r0
 910:	e2 f7       	brpl	.-8      	; 0x90a <__stack+0xab>
 912:	84 27       	eor	r24, r20
 914:	8c 93       	st	X, r24
				break;
		}
	}
	else{}
}
 916:	0f 90       	pop	r0
 918:	0f 90       	pop	r0
 91a:	0f 90       	pop	r0
 91c:	0f 90       	pop	r0
 91e:	cf 91       	pop	r28
 920:	df 91       	pop	r29
 922:	08 95       	ret

00000924 <GI_vdEnableGI>:
#include "Macros.h"
#include "GI_Interface.h"
#include "GI_Private.h"

void GI_vdEnableGI()
{
 924:	df 93       	push	r29
 926:	cf 93       	push	r28
 928:	cd b7       	in	r28, 0x3d	; 61
 92a:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG_REGISTER, BIT_I);
 92c:	af e5       	ldi	r26, 0x5F	; 95
 92e:	b0 e0       	ldi	r27, 0x00	; 0
 930:	ef e5       	ldi	r30, 0x5F	; 95
 932:	f0 e0       	ldi	r31, 0x00	; 0
 934:	80 81       	ld	r24, Z
 936:	80 68       	ori	r24, 0x80	; 128
 938:	8c 93       	st	X, r24
}
 93a:	cf 91       	pop	r28
 93c:	df 91       	pop	r29
 93e:	08 95       	ret

00000940 <GI_vdDisEnableGI>:

void GI_vdDisEnableGI()
{
 940:	df 93       	push	r29
 942:	cf 93       	push	r28
 944:	cd b7       	in	r28, 0x3d	; 61
 946:	de b7       	in	r29, 0x3e	; 62
	 CLR_BIT(SREG_REGISTER, BIT_I);
 948:	af e5       	ldi	r26, 0x5F	; 95
 94a:	b0 e0       	ldi	r27, 0x00	; 0
 94c:	ef e5       	ldi	r30, 0x5F	; 95
 94e:	f0 e0       	ldi	r31, 0x00	; 0
 950:	80 81       	ld	r24, Z
 952:	8f 77       	andi	r24, 0x7F	; 127
 954:	8c 93       	st	X, r24
}
 956:	cf 91       	pop	r28
 958:	df 91       	pop	r29
 95a:	08 95       	ret

0000095c <intiNormal>:
#include "DIO_Interface.h"
#include "Timer_private.h"
void (*Ptr)(void);

void intiNormal()
{
 95c:	df 93       	push	r29
 95e:	cf 93       	push	r28
 960:	cd b7       	in	r28, 0x3d	; 61
 962:	de b7       	in	r29, 0x3e	; 62
	SET_BYTE(TCNT0_Register,123);
 964:	e2 e5       	ldi	r30, 0x52	; 82
 966:	f0 e0       	ldi	r31, 0x00	; 0
 968:	8b e7       	ldi	r24, 0x7B	; 123
 96a:	80 83       	st	Z, r24
	//normal
	CLR_BIT(TCCR0_Register, 3);
 96c:	a3 e5       	ldi	r26, 0x53	; 83
 96e:	b0 e0       	ldi	r27, 0x00	; 0
 970:	e3 e5       	ldi	r30, 0x53	; 83
 972:	f0 e0       	ldi	r31, 0x00	; 0
 974:	80 81       	ld	r24, Z
 976:	87 7f       	andi	r24, 0xF7	; 247
 978:	8c 93       	st	X, r24
	CLR_BIT(TCCR0_Register, 6);
 97a:	a3 e5       	ldi	r26, 0x53	; 83
 97c:	b0 e0       	ldi	r27, 0x00	; 0
 97e:	e3 e5       	ldi	r30, 0x53	; 83
 980:	f0 e0       	ldi	r31, 0x00	; 0
 982:	80 81       	ld	r24, Z
 984:	8f 7b       	andi	r24, 0xBF	; 191
 986:	8c 93       	st	X, r24
	SET_BIT(TIMSK_Register, 0);
 988:	a9 e5       	ldi	r26, 0x59	; 89
 98a:	b0 e0       	ldi	r27, 0x00	; 0
 98c:	e9 e5       	ldi	r30, 0x59	; 89
 98e:	f0 e0       	ldi	r31, 0x00	; 0
 990:	80 81       	ld	r24, Z
 992:	81 60       	ori	r24, 0x01	; 1
 994:	8c 93       	st	X, r24
	SET_BIT(TCCR0_Register, 0);
 996:	a3 e5       	ldi	r26, 0x53	; 83
 998:	b0 e0       	ldi	r27, 0x00	; 0
 99a:	e3 e5       	ldi	r30, 0x53	; 83
 99c:	f0 e0       	ldi	r31, 0x00	; 0
 99e:	80 81       	ld	r24, Z
 9a0:	81 60       	ori	r24, 0x01	; 1
 9a2:	8c 93       	st	X, r24
	CLR_BIT(TCCR0_Register, 1);
 9a4:	a3 e5       	ldi	r26, 0x53	; 83
 9a6:	b0 e0       	ldi	r27, 0x00	; 0
 9a8:	e3 e5       	ldi	r30, 0x53	; 83
 9aa:	f0 e0       	ldi	r31, 0x00	; 0
 9ac:	80 81       	ld	r24, Z
 9ae:	8d 7f       	andi	r24, 0xFD	; 253
 9b0:	8c 93       	st	X, r24
	SET_BIT(TCCR0_Register, 2);
 9b2:	a3 e5       	ldi	r26, 0x53	; 83
 9b4:	b0 e0       	ldi	r27, 0x00	; 0
 9b6:	e3 e5       	ldi	r30, 0x53	; 83
 9b8:	f0 e0       	ldi	r31, 0x00	; 0
 9ba:	80 81       	ld	r24, Z
 9bc:	84 60       	ori	r24, 0x04	; 4
 9be:	8c 93       	st	X, r24

}
 9c0:	cf 91       	pop	r28
 9c2:	df 91       	pop	r29
 9c4:	08 95       	ret

000009c6 <assignPtrCallBack>:
void assignPtrCallBack(void (*PtrPassed)(void))
{
 9c6:	df 93       	push	r29
 9c8:	cf 93       	push	r28
 9ca:	00 d0       	rcall	.+0      	; 0x9cc <assignPtrCallBack+0x6>
 9cc:	cd b7       	in	r28, 0x3d	; 61
 9ce:	de b7       	in	r29, 0x3e	; 62
 9d0:	9a 83       	std	Y+2, r25	; 0x02
 9d2:	89 83       	std	Y+1, r24	; 0x01
	Ptr=PtrPassed;
 9d4:	89 81       	ldd	r24, Y+1	; 0x01
 9d6:	9a 81       	ldd	r25, Y+2	; 0x02
 9d8:	90 93 62 00 	sts	0x0062, r25
 9dc:	80 93 61 00 	sts	0x0061, r24
}
 9e0:	0f 90       	pop	r0
 9e2:	0f 90       	pop	r0
 9e4:	cf 91       	pop	r28
 9e6:	df 91       	pop	r29
 9e8:	08 95       	ret

000009ea <__vector_11>:
void __vector_11 (void)
{
 9ea:	df 93       	push	r29
 9ec:	cf 93       	push	r28
 9ee:	cd b7       	in	r28, 0x3d	; 61
 9f0:	de b7       	in	r29, 0x3e	; 62
	(*Ptr)();
 9f2:	e0 91 61 00 	lds	r30, 0x0061
 9f6:	f0 91 62 00 	lds	r31, 0x0062
 9fa:	09 95       	icall
}
 9fc:	cf 91       	pop	r28
 9fe:	df 91       	pop	r29
 a00:	08 95       	ret

00000a02 <_exit>:
 a02:	f8 94       	cli

00000a04 <__stop_program>:
 a04:	ff cf       	rjmp	.-2      	; 0xa04 <__stop_program>
