
Timer1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000902  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000930  00000000  00000000  00000958  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000087c  00000000  00000000  00001288  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 5e 04 	call	0x8bc	; 0x8bc <main>
  64:	0c 94 7f 04 	jmp	0x8fe	; 0x8fe <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_vdSetPortDirection>:
#include "DIO_Registers.h"
//Filename_typeFunctionality

//Set Port direction
void DIO_vdSetPortDirection(u8 PortID, u8 PortDirection)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_vdSetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_vdSetPortDirection+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	89 83       	std	Y+1, r24	; 0x01
  7a:	6a 83       	std	Y+2, r22	; 0x02
	//00000000
	if(PortID >= 0 && PortID <= 3)
  7c:	89 81       	ldd	r24, Y+1	; 0x01
  7e:	84 30       	cpi	r24, 0x04	; 4
  80:	90 f5       	brcc	.+100    	; 0xe6 <DIO_vdSetPortDirection+0x7a>
	{
		switch (PortID)
  82:	89 81       	ldd	r24, Y+1	; 0x01
  84:	28 2f       	mov	r18, r24
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	3c 83       	std	Y+4, r19	; 0x04
  8a:	2b 83       	std	Y+3, r18	; 0x03
  8c:	8b 81       	ldd	r24, Y+3	; 0x03
  8e:	9c 81       	ldd	r25, Y+4	; 0x04
  90:	81 30       	cpi	r24, 0x01	; 1
  92:	91 05       	cpc	r25, r1
  94:	d1 f0       	breq	.+52     	; 0xca <DIO_vdSetPortDirection+0x5e>
  96:	2b 81       	ldd	r18, Y+3	; 0x03
  98:	3c 81       	ldd	r19, Y+4	; 0x04
  9a:	22 30       	cpi	r18, 0x02	; 2
  9c:	31 05       	cpc	r19, r1
  9e:	2c f4       	brge	.+10     	; 0xaa <DIO_vdSetPortDirection+0x3e>
  a0:	8b 81       	ldd	r24, Y+3	; 0x03
  a2:	9c 81       	ldd	r25, Y+4	; 0x04
  a4:	00 97       	sbiw	r24, 0x00	; 0
  a6:	61 f0       	breq	.+24     	; 0xc0 <DIO_vdSetPortDirection+0x54>
  a8:	1e c0       	rjmp	.+60     	; 0xe6 <DIO_vdSetPortDirection+0x7a>
  aa:	2b 81       	ldd	r18, Y+3	; 0x03
  ac:	3c 81       	ldd	r19, Y+4	; 0x04
  ae:	22 30       	cpi	r18, 0x02	; 2
  b0:	31 05       	cpc	r19, r1
  b2:	81 f0       	breq	.+32     	; 0xd4 <DIO_vdSetPortDirection+0x68>
  b4:	8b 81       	ldd	r24, Y+3	; 0x03
  b6:	9c 81       	ldd	r25, Y+4	; 0x04
  b8:	83 30       	cpi	r24, 0x03	; 3
  ba:	91 05       	cpc	r25, r1
  bc:	81 f0       	breq	.+32     	; 0xde <DIO_vdSetPortDirection+0x72>
  be:	13 c0       	rjmp	.+38     	; 0xe6 <DIO_vdSetPortDirection+0x7a>
		{
			case PortA:
				DDRA_REGISTER= PortDirection;
  c0:	ea e3       	ldi	r30, 0x3A	; 58
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	8a 81       	ldd	r24, Y+2	; 0x02
  c6:	80 83       	st	Z, r24
  c8:	0e c0       	rjmp	.+28     	; 0xe6 <DIO_vdSetPortDirection+0x7a>
				break;
			case PortB:
				DDRB_REGISTER= PortDirection;
  ca:	e7 e3       	ldi	r30, 0x37	; 55
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	8a 81       	ldd	r24, Y+2	; 0x02
  d0:	80 83       	st	Z, r24
  d2:	09 c0       	rjmp	.+18     	; 0xe6 <DIO_vdSetPortDirection+0x7a>
				break;
			case PortC:
				DDRC_REGISTER= PortDirection;
  d4:	e4 e3       	ldi	r30, 0x34	; 52
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	8a 81       	ldd	r24, Y+2	; 0x02
  da:	80 83       	st	Z, r24
  dc:	04 c0       	rjmp	.+8      	; 0xe6 <DIO_vdSetPortDirection+0x7a>
				break;
			case PortD:
				DDRD_REGISTER= PortDirection;
  de:	e1 e3       	ldi	r30, 0x31	; 49
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	8a 81       	ldd	r24, Y+2	; 0x02
  e4:	80 83       	st	Z, r24
				break;
		}
	}
	else
	{}
}
  e6:	0f 90       	pop	r0
  e8:	0f 90       	pop	r0
  ea:	0f 90       	pop	r0
  ec:	0f 90       	pop	r0
  ee:	cf 91       	pop	r28
  f0:	df 91       	pop	r29
  f2:	08 95       	ret

000000f4 <DIO_vdSetPortValue>:

//Set PORT as a register value
void DIO_vdSetPortValue(u8 PortID , u8 PortValue )
{
  f4:	df 93       	push	r29
  f6:	cf 93       	push	r28
  f8:	00 d0       	rcall	.+0      	; 0xfa <DIO_vdSetPortValue+0x6>
  fa:	00 d0       	rcall	.+0      	; 0xfc <DIO_vdSetPortValue+0x8>
  fc:	00 d0       	rcall	.+0      	; 0xfe <DIO_vdSetPortValue+0xa>
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
 102:	89 83       	std	Y+1, r24	; 0x01
 104:	6a 83       	std	Y+2, r22	; 0x02
	if(PortID >= 0 && PortID <= 3)
 106:	89 81       	ldd	r24, Y+1	; 0x01
 108:	84 30       	cpi	r24, 0x04	; 4
 10a:	08 f0       	brcs	.+2      	; 0x10e <DIO_vdSetPortValue+0x1a>
 10c:	64 c0       	rjmp	.+200    	; 0x1d6 <DIO_vdSetPortValue+0xe2>
	{
		if(PortValue == PORT_LOW)
 10e:	8a 81       	ldd	r24, Y+2	; 0x02
 110:	88 23       	and	r24, r24
 112:	79 f5       	brne	.+94     	; 0x172 <DIO_vdSetPortValue+0x7e>
		{
			switch(PortID)
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	28 2f       	mov	r18, r24
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	3e 83       	std	Y+6, r19	; 0x06
 11c:	2d 83       	std	Y+5, r18	; 0x05
 11e:	8d 81       	ldd	r24, Y+5	; 0x05
 120:	9e 81       	ldd	r25, Y+6	; 0x06
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	91 05       	cpc	r25, r1
 126:	c9 f0       	breq	.+50     	; 0x15a <DIO_vdSetPortValue+0x66>
 128:	2d 81       	ldd	r18, Y+5	; 0x05
 12a:	3e 81       	ldd	r19, Y+6	; 0x06
 12c:	22 30       	cpi	r18, 0x02	; 2
 12e:	31 05       	cpc	r19, r1
 130:	2c f4       	brge	.+10     	; 0x13c <DIO_vdSetPortValue+0x48>
 132:	8d 81       	ldd	r24, Y+5	; 0x05
 134:	9e 81       	ldd	r25, Y+6	; 0x06
 136:	00 97       	sbiw	r24, 0x00	; 0
 138:	61 f0       	breq	.+24     	; 0x152 <DIO_vdSetPortValue+0x5e>
 13a:	4d c0       	rjmp	.+154    	; 0x1d6 <DIO_vdSetPortValue+0xe2>
 13c:	2d 81       	ldd	r18, Y+5	; 0x05
 13e:	3e 81       	ldd	r19, Y+6	; 0x06
 140:	22 30       	cpi	r18, 0x02	; 2
 142:	31 05       	cpc	r19, r1
 144:	71 f0       	breq	.+28     	; 0x162 <DIO_vdSetPortValue+0x6e>
 146:	8d 81       	ldd	r24, Y+5	; 0x05
 148:	9e 81       	ldd	r25, Y+6	; 0x06
 14a:	83 30       	cpi	r24, 0x03	; 3
 14c:	91 05       	cpc	r25, r1
 14e:	69 f0       	breq	.+26     	; 0x16a <DIO_vdSetPortValue+0x76>
 150:	42 c0       	rjmp	.+132    	; 0x1d6 <DIO_vdSetPortValue+0xe2>
			{
				case PortA:
					CLR_BYTE(PORTA_REGISTER);
 152:	eb e3       	ldi	r30, 0x3B	; 59
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	10 82       	st	Z, r1
 158:	3e c0       	rjmp	.+124    	; 0x1d6 <DIO_vdSetPortValue+0xe2>
					break;
				case PortB:
					CLR_BYTE(PORTB_REGISTER);
 15a:	e8 e3       	ldi	r30, 0x38	; 56
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	10 82       	st	Z, r1
 160:	3a c0       	rjmp	.+116    	; 0x1d6 <DIO_vdSetPortValue+0xe2>
					break;
				case PortC:
					CLR_BYTE(PORTC_REGISTER);
 162:	e5 e3       	ldi	r30, 0x35	; 53
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	10 82       	st	Z, r1
 168:	36 c0       	rjmp	.+108    	; 0x1d6 <DIO_vdSetPortValue+0xe2>
					break;
				case PortD:
					CLR_BYTE(PORTD_REGISTER);
 16a:	e2 e3       	ldi	r30, 0x32	; 50
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	10 82       	st	Z, r1
 170:	32 c0       	rjmp	.+100    	; 0x1d6 <DIO_vdSetPortValue+0xe2>
					break;
			}
		}
		else
		{
			switch(PortID)
 172:	89 81       	ldd	r24, Y+1	; 0x01
 174:	28 2f       	mov	r18, r24
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	3c 83       	std	Y+4, r19	; 0x04
 17a:	2b 83       	std	Y+3, r18	; 0x03
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	9c 81       	ldd	r25, Y+4	; 0x04
 180:	81 30       	cpi	r24, 0x01	; 1
 182:	91 05       	cpc	r25, r1
 184:	d1 f0       	breq	.+52     	; 0x1ba <DIO_vdSetPortValue+0xc6>
 186:	2b 81       	ldd	r18, Y+3	; 0x03
 188:	3c 81       	ldd	r19, Y+4	; 0x04
 18a:	22 30       	cpi	r18, 0x02	; 2
 18c:	31 05       	cpc	r19, r1
 18e:	2c f4       	brge	.+10     	; 0x19a <DIO_vdSetPortValue+0xa6>
 190:	8b 81       	ldd	r24, Y+3	; 0x03
 192:	9c 81       	ldd	r25, Y+4	; 0x04
 194:	00 97       	sbiw	r24, 0x00	; 0
 196:	61 f0       	breq	.+24     	; 0x1b0 <DIO_vdSetPortValue+0xbc>
 198:	1e c0       	rjmp	.+60     	; 0x1d6 <DIO_vdSetPortValue+0xe2>
 19a:	2b 81       	ldd	r18, Y+3	; 0x03
 19c:	3c 81       	ldd	r19, Y+4	; 0x04
 19e:	22 30       	cpi	r18, 0x02	; 2
 1a0:	31 05       	cpc	r19, r1
 1a2:	81 f0       	breq	.+32     	; 0x1c4 <DIO_vdSetPortValue+0xd0>
 1a4:	8b 81       	ldd	r24, Y+3	; 0x03
 1a6:	9c 81       	ldd	r25, Y+4	; 0x04
 1a8:	83 30       	cpi	r24, 0x03	; 3
 1aa:	91 05       	cpc	r25, r1
 1ac:	81 f0       	breq	.+32     	; 0x1ce <DIO_vdSetPortValue+0xda>
 1ae:	13 c0       	rjmp	.+38     	; 0x1d6 <DIO_vdSetPortValue+0xe2>
			{
				case PortA:
					SET_BYTE(PORTA_REGISTER ,  PortValue);
 1b0:	eb e3       	ldi	r30, 0x3B	; 59
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	8a 81       	ldd	r24, Y+2	; 0x02
 1b6:	80 83       	st	Z, r24
 1b8:	0e c0       	rjmp	.+28     	; 0x1d6 <DIO_vdSetPortValue+0xe2>
					break;
				case PortB:
					SET_BYTE(PORTB_REGISTER , PortValue);
 1ba:	e8 e3       	ldi	r30, 0x38	; 56
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	8a 81       	ldd	r24, Y+2	; 0x02
 1c0:	80 83       	st	Z, r24
 1c2:	09 c0       	rjmp	.+18     	; 0x1d6 <DIO_vdSetPortValue+0xe2>
					break;
				case PortC:
					SET_BYTE(PORTC_REGISTER , PortValue);
 1c4:	e5 e3       	ldi	r30, 0x35	; 53
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	8a 81       	ldd	r24, Y+2	; 0x02
 1ca:	80 83       	st	Z, r24
 1cc:	04 c0       	rjmp	.+8      	; 0x1d6 <DIO_vdSetPortValue+0xe2>
					break;
				case PortD:
					SET_BYTE(PORTD_REGISTER , PortValue);
 1ce:	e2 e3       	ldi	r30, 0x32	; 50
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	8a 81       	ldd	r24, Y+2	; 0x02
 1d4:	80 83       	st	Z, r24
			}
		}
	}
	else
	{}
}
 1d6:	26 96       	adiw	r28, 0x06	; 6
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	f8 94       	cli
 1dc:	de bf       	out	0x3e, r29	; 62
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	cd bf       	out	0x3d, r28	; 61
 1e2:	cf 91       	pop	r28
 1e4:	df 91       	pop	r29
 1e6:	08 95       	ret

000001e8 <DIO_vdSetPintDirection>:

//Set pin direction
void DIO_vdSetPintDirection(u8 PortID, u8 PinID, u8 PinDirection)
{
 1e8:	df 93       	push	r29
 1ea:	cf 93       	push	r28
 1ec:	cd b7       	in	r28, 0x3d	; 61
 1ee:	de b7       	in	r29, 0x3e	; 62
 1f0:	27 97       	sbiw	r28, 0x07	; 7
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	f8 94       	cli
 1f6:	de bf       	out	0x3e, r29	; 62
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	cd bf       	out	0x3d, r28	; 61
 1fc:	89 83       	std	Y+1, r24	; 0x01
 1fe:	6a 83       	std	Y+2, r22	; 0x02
 200:	4b 83       	std	Y+3, r20	; 0x03
	if((PortID >= 0 && PortID <= 3) && (PinID >= 0 && PinID <= 7))
 202:	89 81       	ldd	r24, Y+1	; 0x01
 204:	84 30       	cpi	r24, 0x04	; 4
 206:	08 f0       	brcs	.+2      	; 0x20a <DIO_vdSetPintDirection+0x22>
 208:	ee c0       	rjmp	.+476    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
 20a:	8a 81       	ldd	r24, Y+2	; 0x02
 20c:	88 30       	cpi	r24, 0x08	; 8
 20e:	08 f0       	brcs	.+2      	; 0x212 <DIO_vdSetPintDirection+0x2a>
 210:	ea c0       	rjmp	.+468    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
	{
		if(PinDirection == PIN_OUTPUT)
 212:	8b 81       	ldd	r24, Y+3	; 0x03
 214:	81 30       	cpi	r24, 0x01	; 1
 216:	09 f0       	breq	.+2      	; 0x21a <DIO_vdSetPintDirection+0x32>
 218:	6f c0       	rjmp	.+222    	; 0x2f8 <DIO_vdSetPintDirection+0x110>
		{
			switch(PortID)
 21a:	89 81       	ldd	r24, Y+1	; 0x01
 21c:	28 2f       	mov	r18, r24
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	3f 83       	std	Y+7, r19	; 0x07
 222:	2e 83       	std	Y+6, r18	; 0x06
 224:	8e 81       	ldd	r24, Y+6	; 0x06
 226:	9f 81       	ldd	r25, Y+7	; 0x07
 228:	81 30       	cpi	r24, 0x01	; 1
 22a:	91 05       	cpc	r25, r1
 22c:	49 f1       	breq	.+82     	; 0x280 <DIO_vdSetPintDirection+0x98>
 22e:	2e 81       	ldd	r18, Y+6	; 0x06
 230:	3f 81       	ldd	r19, Y+7	; 0x07
 232:	22 30       	cpi	r18, 0x02	; 2
 234:	31 05       	cpc	r19, r1
 236:	2c f4       	brge	.+10     	; 0x242 <DIO_vdSetPintDirection+0x5a>
 238:	8e 81       	ldd	r24, Y+6	; 0x06
 23a:	9f 81       	ldd	r25, Y+7	; 0x07
 23c:	00 97       	sbiw	r24, 0x00	; 0
 23e:	61 f0       	breq	.+24     	; 0x258 <DIO_vdSetPintDirection+0x70>
 240:	d2 c0       	rjmp	.+420    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
 242:	2e 81       	ldd	r18, Y+6	; 0x06
 244:	3f 81       	ldd	r19, Y+7	; 0x07
 246:	22 30       	cpi	r18, 0x02	; 2
 248:	31 05       	cpc	r19, r1
 24a:	71 f1       	breq	.+92     	; 0x2a8 <DIO_vdSetPintDirection+0xc0>
 24c:	8e 81       	ldd	r24, Y+6	; 0x06
 24e:	9f 81       	ldd	r25, Y+7	; 0x07
 250:	83 30       	cpi	r24, 0x03	; 3
 252:	91 05       	cpc	r25, r1
 254:	e9 f1       	breq	.+122    	; 0x2d0 <DIO_vdSetPintDirection+0xe8>
 256:	c7 c0       	rjmp	.+398    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
			{
				case PortA:
					SET_BIT(DDRA_REGISTER , PinID);
 258:	aa e3       	ldi	r26, 0x3A	; 58
 25a:	b0 e0       	ldi	r27, 0x00	; 0
 25c:	ea e3       	ldi	r30, 0x3A	; 58
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	48 2f       	mov	r20, r24
 264:	8a 81       	ldd	r24, Y+2	; 0x02
 266:	28 2f       	mov	r18, r24
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	02 2e       	mov	r0, r18
 270:	02 c0       	rjmp	.+4      	; 0x276 <DIO_vdSetPintDirection+0x8e>
 272:	88 0f       	add	r24, r24
 274:	99 1f       	adc	r25, r25
 276:	0a 94       	dec	r0
 278:	e2 f7       	brpl	.-8      	; 0x272 <DIO_vdSetPintDirection+0x8a>
 27a:	84 2b       	or	r24, r20
 27c:	8c 93       	st	X, r24
 27e:	b3 c0       	rjmp	.+358    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortB:
					SET_BIT(DDRB_REGISTER , PinID);
 280:	a7 e3       	ldi	r26, 0x37	; 55
 282:	b0 e0       	ldi	r27, 0x00	; 0
 284:	e7 e3       	ldi	r30, 0x37	; 55
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	80 81       	ld	r24, Z
 28a:	48 2f       	mov	r20, r24
 28c:	8a 81       	ldd	r24, Y+2	; 0x02
 28e:	28 2f       	mov	r18, r24
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	02 2e       	mov	r0, r18
 298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_vdSetPintDirection+0xb6>
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	0a 94       	dec	r0
 2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_vdSetPintDirection+0xb2>
 2a2:	84 2b       	or	r24, r20
 2a4:	8c 93       	st	X, r24
 2a6:	9f c0       	rjmp	.+318    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortC:
					SET_BIT(DDRC_REGISTER , PinID);
 2a8:	a4 e3       	ldi	r26, 0x34	; 52
 2aa:	b0 e0       	ldi	r27, 0x00	; 0
 2ac:	e4 e3       	ldi	r30, 0x34	; 52
 2ae:	f0 e0       	ldi	r31, 0x00	; 0
 2b0:	80 81       	ld	r24, Z
 2b2:	48 2f       	mov	r20, r24
 2b4:	8a 81       	ldd	r24, Y+2	; 0x02
 2b6:	28 2f       	mov	r18, r24
 2b8:	30 e0       	ldi	r19, 0x00	; 0
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	02 2e       	mov	r0, r18
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <DIO_vdSetPintDirection+0xde>
 2c2:	88 0f       	add	r24, r24
 2c4:	99 1f       	adc	r25, r25
 2c6:	0a 94       	dec	r0
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <DIO_vdSetPintDirection+0xda>
 2ca:	84 2b       	or	r24, r20
 2cc:	8c 93       	st	X, r24
 2ce:	8b c0       	rjmp	.+278    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortD:
					SET_BIT(DDRD_REGISTER , PinID);
 2d0:	a1 e3       	ldi	r26, 0x31	; 49
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
 2d4:	e1 e3       	ldi	r30, 0x31	; 49
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	48 2f       	mov	r20, r24
 2dc:	8a 81       	ldd	r24, Y+2	; 0x02
 2de:	28 2f       	mov	r18, r24
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 2e       	mov	r0, r18
 2e8:	02 c0       	rjmp	.+4      	; 0x2ee <DIO_vdSetPintDirection+0x106>
 2ea:	88 0f       	add	r24, r24
 2ec:	99 1f       	adc	r25, r25
 2ee:	0a 94       	dec	r0
 2f0:	e2 f7       	brpl	.-8      	; 0x2ea <DIO_vdSetPintDirection+0x102>
 2f2:	84 2b       	or	r24, r20
 2f4:	8c 93       	st	X, r24
 2f6:	77 c0       	rjmp	.+238    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
					break;
			}
		}
		else if(PinDirection == PIN_INPUT)
 2f8:	8b 81       	ldd	r24, Y+3	; 0x03
 2fa:	88 23       	and	r24, r24
 2fc:	09 f0       	breq	.+2      	; 0x300 <DIO_vdSetPintDirection+0x118>
 2fe:	73 c0       	rjmp	.+230    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
		{
			switch(PortID)
 300:	89 81       	ldd	r24, Y+1	; 0x01
 302:	28 2f       	mov	r18, r24
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	3d 83       	std	Y+5, r19	; 0x05
 308:	2c 83       	std	Y+4, r18	; 0x04
 30a:	8c 81       	ldd	r24, Y+4	; 0x04
 30c:	9d 81       	ldd	r25, Y+5	; 0x05
 30e:	81 30       	cpi	r24, 0x01	; 1
 310:	91 05       	cpc	r25, r1
 312:	59 f1       	breq	.+86     	; 0x36a <DIO_vdSetPintDirection+0x182>
 314:	2c 81       	ldd	r18, Y+4	; 0x04
 316:	3d 81       	ldd	r19, Y+5	; 0x05
 318:	22 30       	cpi	r18, 0x02	; 2
 31a:	31 05       	cpc	r19, r1
 31c:	2c f4       	brge	.+10     	; 0x328 <DIO_vdSetPintDirection+0x140>
 31e:	8c 81       	ldd	r24, Y+4	; 0x04
 320:	9d 81       	ldd	r25, Y+5	; 0x05
 322:	00 97       	sbiw	r24, 0x00	; 0
 324:	69 f0       	breq	.+26     	; 0x340 <DIO_vdSetPintDirection+0x158>
 326:	5f c0       	rjmp	.+190    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
 328:	2c 81       	ldd	r18, Y+4	; 0x04
 32a:	3d 81       	ldd	r19, Y+5	; 0x05
 32c:	22 30       	cpi	r18, 0x02	; 2
 32e:	31 05       	cpc	r19, r1
 330:	89 f1       	breq	.+98     	; 0x394 <DIO_vdSetPintDirection+0x1ac>
 332:	8c 81       	ldd	r24, Y+4	; 0x04
 334:	9d 81       	ldd	r25, Y+5	; 0x05
 336:	83 30       	cpi	r24, 0x03	; 3
 338:	91 05       	cpc	r25, r1
 33a:	09 f4       	brne	.+2      	; 0x33e <DIO_vdSetPintDirection+0x156>
 33c:	40 c0       	rjmp	.+128    	; 0x3be <DIO_vdSetPintDirection+0x1d6>
 33e:	53 c0       	rjmp	.+166    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
			{
				case PortA:
					CLR_BIT(DDRA_REGISTER , PinID);
 340:	aa e3       	ldi	r26, 0x3A	; 58
 342:	b0 e0       	ldi	r27, 0x00	; 0
 344:	ea e3       	ldi	r30, 0x3A	; 58
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	80 81       	ld	r24, Z
 34a:	48 2f       	mov	r20, r24
 34c:	8a 81       	ldd	r24, Y+2	; 0x02
 34e:	28 2f       	mov	r18, r24
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	02 2e       	mov	r0, r18
 358:	02 c0       	rjmp	.+4      	; 0x35e <DIO_vdSetPintDirection+0x176>
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	0a 94       	dec	r0
 360:	e2 f7       	brpl	.-8      	; 0x35a <DIO_vdSetPintDirection+0x172>
 362:	80 95       	com	r24
 364:	84 23       	and	r24, r20
 366:	8c 93       	st	X, r24
 368:	3e c0       	rjmp	.+124    	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortB:
					CLR_BIT(DDRB_REGISTER , PinID);
 36a:	a7 e3       	ldi	r26, 0x37	; 55
 36c:	b0 e0       	ldi	r27, 0x00	; 0
 36e:	e7 e3       	ldi	r30, 0x37	; 55
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	80 81       	ld	r24, Z
 374:	48 2f       	mov	r20, r24
 376:	8a 81       	ldd	r24, Y+2	; 0x02
 378:	28 2f       	mov	r18, r24
 37a:	30 e0       	ldi	r19, 0x00	; 0
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	02 2e       	mov	r0, r18
 382:	02 c0       	rjmp	.+4      	; 0x388 <DIO_vdSetPintDirection+0x1a0>
 384:	88 0f       	add	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	0a 94       	dec	r0
 38a:	e2 f7       	brpl	.-8      	; 0x384 <DIO_vdSetPintDirection+0x19c>
 38c:	80 95       	com	r24
 38e:	84 23       	and	r24, r20
 390:	8c 93       	st	X, r24
 392:	29 c0       	rjmp	.+82     	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortC:
					CLR_BIT(DDRC_REGISTER , PinID);
 394:	a4 e3       	ldi	r26, 0x34	; 52
 396:	b0 e0       	ldi	r27, 0x00	; 0
 398:	e4 e3       	ldi	r30, 0x34	; 52
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	80 81       	ld	r24, Z
 39e:	48 2f       	mov	r20, r24
 3a0:	8a 81       	ldd	r24, Y+2	; 0x02
 3a2:	28 2f       	mov	r18, r24
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	02 2e       	mov	r0, r18
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <DIO_vdSetPintDirection+0x1ca>
 3ae:	88 0f       	add	r24, r24
 3b0:	99 1f       	adc	r25, r25
 3b2:	0a 94       	dec	r0
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <DIO_vdSetPintDirection+0x1c6>
 3b6:	80 95       	com	r24
 3b8:	84 23       	and	r24, r20
 3ba:	8c 93       	st	X, r24
 3bc:	14 c0       	rjmp	.+40     	; 0x3e6 <DIO_vdSetPintDirection+0x1fe>
					break;
				case PortD:
					CLR_BIT(DDRD_REGISTER , PinID);
 3be:	a1 e3       	ldi	r26, 0x31	; 49
 3c0:	b0 e0       	ldi	r27, 0x00	; 0
 3c2:	e1 e3       	ldi	r30, 0x31	; 49
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	80 81       	ld	r24, Z
 3c8:	48 2f       	mov	r20, r24
 3ca:	8a 81       	ldd	r24, Y+2	; 0x02
 3cc:	28 2f       	mov	r18, r24
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	02 2e       	mov	r0, r18
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <DIO_vdSetPintDirection+0x1f4>
 3d8:	88 0f       	add	r24, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	0a 94       	dec	r0
 3de:	e2 f7       	brpl	.-8      	; 0x3d8 <DIO_vdSetPintDirection+0x1f0>
 3e0:	80 95       	com	r24
 3e2:	84 23       	and	r24, r20
 3e4:	8c 93       	st	X, r24
			}
		}

	}
	else {}
}
 3e6:	27 96       	adiw	r28, 0x07	; 7
 3e8:	0f b6       	in	r0, 0x3f	; 63
 3ea:	f8 94       	cli
 3ec:	de bf       	out	0x3e, r29	; 62
 3ee:	0f be       	out	0x3f, r0	; 63
 3f0:	cd bf       	out	0x3d, r28	; 61
 3f2:	cf 91       	pop	r28
 3f4:	df 91       	pop	r29
 3f6:	08 95       	ret

000003f8 <DIO_vdSetPinValue>:


//Set Pin value
void DIO_vdSetPinValue(u8 PortID , u8 PinID ,u8 PinValue )
{
 3f8:	df 93       	push	r29
 3fa:	cf 93       	push	r28
 3fc:	cd b7       	in	r28, 0x3d	; 61
 3fe:	de b7       	in	r29, 0x3e	; 62
 400:	27 97       	sbiw	r28, 0x07	; 7
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	f8 94       	cli
 406:	de bf       	out	0x3e, r29	; 62
 408:	0f be       	out	0x3f, r0	; 63
 40a:	cd bf       	out	0x3d, r28	; 61
 40c:	89 83       	std	Y+1, r24	; 0x01
 40e:	6a 83       	std	Y+2, r22	; 0x02
 410:	4b 83       	std	Y+3, r20	; 0x03
	if((PortID >= 0 && PortID <= 3) && (PinID >= 0 && PinID <= 7))
 412:	89 81       	ldd	r24, Y+1	; 0x01
 414:	84 30       	cpi	r24, 0x04	; 4
 416:	08 f0       	brcs	.+2      	; 0x41a <DIO_vdSetPinValue+0x22>
 418:	ee c0       	rjmp	.+476    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
 41a:	8a 81       	ldd	r24, Y+2	; 0x02
 41c:	88 30       	cpi	r24, 0x08	; 8
 41e:	08 f0       	brcs	.+2      	; 0x422 <DIO_vdSetPinValue+0x2a>
 420:	ea c0       	rjmp	.+468    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
	{
		if(PinValue==PIN_High)
 422:	8b 81       	ldd	r24, Y+3	; 0x03
 424:	81 30       	cpi	r24, 0x01	; 1
 426:	09 f0       	breq	.+2      	; 0x42a <DIO_vdSetPinValue+0x32>
 428:	6f c0       	rjmp	.+222    	; 0x508 <DIO_vdSetPinValue+0x110>
		{
			switch(PortID)
 42a:	89 81       	ldd	r24, Y+1	; 0x01
 42c:	28 2f       	mov	r18, r24
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	3f 83       	std	Y+7, r19	; 0x07
 432:	2e 83       	std	Y+6, r18	; 0x06
 434:	8e 81       	ldd	r24, Y+6	; 0x06
 436:	9f 81       	ldd	r25, Y+7	; 0x07
 438:	81 30       	cpi	r24, 0x01	; 1
 43a:	91 05       	cpc	r25, r1
 43c:	49 f1       	breq	.+82     	; 0x490 <DIO_vdSetPinValue+0x98>
 43e:	2e 81       	ldd	r18, Y+6	; 0x06
 440:	3f 81       	ldd	r19, Y+7	; 0x07
 442:	22 30       	cpi	r18, 0x02	; 2
 444:	31 05       	cpc	r19, r1
 446:	2c f4       	brge	.+10     	; 0x452 <DIO_vdSetPinValue+0x5a>
 448:	8e 81       	ldd	r24, Y+6	; 0x06
 44a:	9f 81       	ldd	r25, Y+7	; 0x07
 44c:	00 97       	sbiw	r24, 0x00	; 0
 44e:	61 f0       	breq	.+24     	; 0x468 <DIO_vdSetPinValue+0x70>
 450:	d2 c0       	rjmp	.+420    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
 452:	2e 81       	ldd	r18, Y+6	; 0x06
 454:	3f 81       	ldd	r19, Y+7	; 0x07
 456:	22 30       	cpi	r18, 0x02	; 2
 458:	31 05       	cpc	r19, r1
 45a:	71 f1       	breq	.+92     	; 0x4b8 <DIO_vdSetPinValue+0xc0>
 45c:	8e 81       	ldd	r24, Y+6	; 0x06
 45e:	9f 81       	ldd	r25, Y+7	; 0x07
 460:	83 30       	cpi	r24, 0x03	; 3
 462:	91 05       	cpc	r25, r1
 464:	e9 f1       	breq	.+122    	; 0x4e0 <DIO_vdSetPinValue+0xe8>
 466:	c7 c0       	rjmp	.+398    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
			{
				case PortA:
					SET_BIT(PORTA_REGISTER , PinID);
 468:	ab e3       	ldi	r26, 0x3B	; 59
 46a:	b0 e0       	ldi	r27, 0x00	; 0
 46c:	eb e3       	ldi	r30, 0x3B	; 59
 46e:	f0 e0       	ldi	r31, 0x00	; 0
 470:	80 81       	ld	r24, Z
 472:	48 2f       	mov	r20, r24
 474:	8a 81       	ldd	r24, Y+2	; 0x02
 476:	28 2f       	mov	r18, r24
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	02 2e       	mov	r0, r18
 480:	02 c0       	rjmp	.+4      	; 0x486 <DIO_vdSetPinValue+0x8e>
 482:	88 0f       	add	r24, r24
 484:	99 1f       	adc	r25, r25
 486:	0a 94       	dec	r0
 488:	e2 f7       	brpl	.-8      	; 0x482 <DIO_vdSetPinValue+0x8a>
 48a:	84 2b       	or	r24, r20
 48c:	8c 93       	st	X, r24
 48e:	b3 c0       	rjmp	.+358    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
					break;
				case PortB:
					SET_BIT(PORTB_REGISTER , PinID);
 490:	a8 e3       	ldi	r26, 0x38	; 56
 492:	b0 e0       	ldi	r27, 0x00	; 0
 494:	e8 e3       	ldi	r30, 0x38	; 56
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	80 81       	ld	r24, Z
 49a:	48 2f       	mov	r20, r24
 49c:	8a 81       	ldd	r24, Y+2	; 0x02
 49e:	28 2f       	mov	r18, r24
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	02 2e       	mov	r0, r18
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <DIO_vdSetPinValue+0xb6>
 4aa:	88 0f       	add	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	0a 94       	dec	r0
 4b0:	e2 f7       	brpl	.-8      	; 0x4aa <DIO_vdSetPinValue+0xb2>
 4b2:	84 2b       	or	r24, r20
 4b4:	8c 93       	st	X, r24
 4b6:	9f c0       	rjmp	.+318    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
					break;
				case PortC:
					SET_BIT(PORTC_REGISTER , PinID);
 4b8:	a5 e3       	ldi	r26, 0x35	; 53
 4ba:	b0 e0       	ldi	r27, 0x00	; 0
 4bc:	e5 e3       	ldi	r30, 0x35	; 53
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	80 81       	ld	r24, Z
 4c2:	48 2f       	mov	r20, r24
 4c4:	8a 81       	ldd	r24, Y+2	; 0x02
 4c6:	28 2f       	mov	r18, r24
 4c8:	30 e0       	ldi	r19, 0x00	; 0
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	02 2e       	mov	r0, r18
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <DIO_vdSetPinValue+0xde>
 4d2:	88 0f       	add	r24, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	0a 94       	dec	r0
 4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <DIO_vdSetPinValue+0xda>
 4da:	84 2b       	or	r24, r20
 4dc:	8c 93       	st	X, r24
 4de:	8b c0       	rjmp	.+278    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
					break;
				case PortD:
					SET_BIT(PORTD_REGISTER , PinID);
 4e0:	a2 e3       	ldi	r26, 0x32	; 50
 4e2:	b0 e0       	ldi	r27, 0x00	; 0
 4e4:	e2 e3       	ldi	r30, 0x32	; 50
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	80 81       	ld	r24, Z
 4ea:	48 2f       	mov	r20, r24
 4ec:	8a 81       	ldd	r24, Y+2	; 0x02
 4ee:	28 2f       	mov	r18, r24
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	81 e0       	ldi	r24, 0x01	; 1
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	02 2e       	mov	r0, r18
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <DIO_vdSetPinValue+0x106>
 4fa:	88 0f       	add	r24, r24
 4fc:	99 1f       	adc	r25, r25
 4fe:	0a 94       	dec	r0
 500:	e2 f7       	brpl	.-8      	; 0x4fa <DIO_vdSetPinValue+0x102>
 502:	84 2b       	or	r24, r20
 504:	8c 93       	st	X, r24
 506:	77 c0       	rjmp	.+238    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
					break;
			}
		}
		else if(PinValue==PIN_LOW)
 508:	8b 81       	ldd	r24, Y+3	; 0x03
 50a:	88 23       	and	r24, r24
 50c:	09 f0       	breq	.+2      	; 0x510 <DIO_vdSetPinValue+0x118>
 50e:	73 c0       	rjmp	.+230    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
		{
			switch(PortID)
 510:	89 81       	ldd	r24, Y+1	; 0x01
 512:	28 2f       	mov	r18, r24
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	3d 83       	std	Y+5, r19	; 0x05
 518:	2c 83       	std	Y+4, r18	; 0x04
 51a:	8c 81       	ldd	r24, Y+4	; 0x04
 51c:	9d 81       	ldd	r25, Y+5	; 0x05
 51e:	81 30       	cpi	r24, 0x01	; 1
 520:	91 05       	cpc	r25, r1
 522:	59 f1       	breq	.+86     	; 0x57a <DIO_vdSetPinValue+0x182>
 524:	2c 81       	ldd	r18, Y+4	; 0x04
 526:	3d 81       	ldd	r19, Y+5	; 0x05
 528:	22 30       	cpi	r18, 0x02	; 2
 52a:	31 05       	cpc	r19, r1
 52c:	2c f4       	brge	.+10     	; 0x538 <DIO_vdSetPinValue+0x140>
 52e:	8c 81       	ldd	r24, Y+4	; 0x04
 530:	9d 81       	ldd	r25, Y+5	; 0x05
 532:	00 97       	sbiw	r24, 0x00	; 0
 534:	69 f0       	breq	.+26     	; 0x550 <DIO_vdSetPinValue+0x158>
 536:	5f c0       	rjmp	.+190    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
 538:	2c 81       	ldd	r18, Y+4	; 0x04
 53a:	3d 81       	ldd	r19, Y+5	; 0x05
 53c:	22 30       	cpi	r18, 0x02	; 2
 53e:	31 05       	cpc	r19, r1
 540:	89 f1       	breq	.+98     	; 0x5a4 <DIO_vdSetPinValue+0x1ac>
 542:	8c 81       	ldd	r24, Y+4	; 0x04
 544:	9d 81       	ldd	r25, Y+5	; 0x05
 546:	83 30       	cpi	r24, 0x03	; 3
 548:	91 05       	cpc	r25, r1
 54a:	09 f4       	brne	.+2      	; 0x54e <DIO_vdSetPinValue+0x156>
 54c:	40 c0       	rjmp	.+128    	; 0x5ce <DIO_vdSetPinValue+0x1d6>
 54e:	53 c0       	rjmp	.+166    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
			{
				case PortA:
					CLR_BIT(PORTA_REGISTER , PinID);
 550:	ab e3       	ldi	r26, 0x3B	; 59
 552:	b0 e0       	ldi	r27, 0x00	; 0
 554:	eb e3       	ldi	r30, 0x3B	; 59
 556:	f0 e0       	ldi	r31, 0x00	; 0
 558:	80 81       	ld	r24, Z
 55a:	48 2f       	mov	r20, r24
 55c:	8a 81       	ldd	r24, Y+2	; 0x02
 55e:	28 2f       	mov	r18, r24
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	02 2e       	mov	r0, r18
 568:	02 c0       	rjmp	.+4      	; 0x56e <DIO_vdSetPinValue+0x176>
 56a:	88 0f       	add	r24, r24
 56c:	99 1f       	adc	r25, r25
 56e:	0a 94       	dec	r0
 570:	e2 f7       	brpl	.-8      	; 0x56a <DIO_vdSetPinValue+0x172>
 572:	80 95       	com	r24
 574:	84 23       	and	r24, r20
 576:	8c 93       	st	X, r24
 578:	3e c0       	rjmp	.+124    	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
					break;
				case PortB:
					CLR_BIT(PORTB_REGISTER , PinID);
 57a:	a8 e3       	ldi	r26, 0x38	; 56
 57c:	b0 e0       	ldi	r27, 0x00	; 0
 57e:	e8 e3       	ldi	r30, 0x38	; 56
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	80 81       	ld	r24, Z
 584:	48 2f       	mov	r20, r24
 586:	8a 81       	ldd	r24, Y+2	; 0x02
 588:	28 2f       	mov	r18, r24
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	02 2e       	mov	r0, r18
 592:	02 c0       	rjmp	.+4      	; 0x598 <DIO_vdSetPinValue+0x1a0>
 594:	88 0f       	add	r24, r24
 596:	99 1f       	adc	r25, r25
 598:	0a 94       	dec	r0
 59a:	e2 f7       	brpl	.-8      	; 0x594 <DIO_vdSetPinValue+0x19c>
 59c:	80 95       	com	r24
 59e:	84 23       	and	r24, r20
 5a0:	8c 93       	st	X, r24
 5a2:	29 c0       	rjmp	.+82     	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
					break;
				case PortC:
					CLR_BIT(PORTC_REGISTER , PinID);
 5a4:	a5 e3       	ldi	r26, 0x35	; 53
 5a6:	b0 e0       	ldi	r27, 0x00	; 0
 5a8:	e5 e3       	ldi	r30, 0x35	; 53
 5aa:	f0 e0       	ldi	r31, 0x00	; 0
 5ac:	80 81       	ld	r24, Z
 5ae:	48 2f       	mov	r20, r24
 5b0:	8a 81       	ldd	r24, Y+2	; 0x02
 5b2:	28 2f       	mov	r18, r24
 5b4:	30 e0       	ldi	r19, 0x00	; 0
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	02 2e       	mov	r0, r18
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <DIO_vdSetPinValue+0x1ca>
 5be:	88 0f       	add	r24, r24
 5c0:	99 1f       	adc	r25, r25
 5c2:	0a 94       	dec	r0
 5c4:	e2 f7       	brpl	.-8      	; 0x5be <DIO_vdSetPinValue+0x1c6>
 5c6:	80 95       	com	r24
 5c8:	84 23       	and	r24, r20
 5ca:	8c 93       	st	X, r24
 5cc:	14 c0       	rjmp	.+40     	; 0x5f6 <DIO_vdSetPinValue+0x1fe>
					break;
				case PortD:
					CLR_BIT(PORTD_REGISTER , PinID);
 5ce:	a2 e3       	ldi	r26, 0x32	; 50
 5d0:	b0 e0       	ldi	r27, 0x00	; 0
 5d2:	e2 e3       	ldi	r30, 0x32	; 50
 5d4:	f0 e0       	ldi	r31, 0x00	; 0
 5d6:	80 81       	ld	r24, Z
 5d8:	48 2f       	mov	r20, r24
 5da:	8a 81       	ldd	r24, Y+2	; 0x02
 5dc:	28 2f       	mov	r18, r24
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	02 2e       	mov	r0, r18
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <DIO_vdSetPinValue+0x1f4>
 5e8:	88 0f       	add	r24, r24
 5ea:	99 1f       	adc	r25, r25
 5ec:	0a 94       	dec	r0
 5ee:	e2 f7       	brpl	.-8      	; 0x5e8 <DIO_vdSetPinValue+0x1f0>
 5f0:	80 95       	com	r24
 5f2:	84 23       	and	r24, r20
 5f4:	8c 93       	st	X, r24
		}
		else
		{}
	}
	else {}
}
 5f6:	27 96       	adiw	r28, 0x07	; 7
 5f8:	0f b6       	in	r0, 0x3f	; 63
 5fa:	f8 94       	cli
 5fc:	de bf       	out	0x3e, r29	; 62
 5fe:	0f be       	out	0x3f, r0	; 63
 600:	cd bf       	out	0x3d, r28	; 61
 602:	cf 91       	pop	r28
 604:	df 91       	pop	r29
 606:	08 95       	ret

00000608 <DIO_u8GetPinValue>:

//Get PIN value
u8 DIO_u8GetPinValue(u8 PortID, u8 PinID)
{
 608:	df 93       	push	r29
 60a:	cf 93       	push	r28
 60c:	00 d0       	rcall	.+0      	; 0x60e <DIO_u8GetPinValue+0x6>
 60e:	00 d0       	rcall	.+0      	; 0x610 <DIO_u8GetPinValue+0x8>
 610:	00 d0       	rcall	.+0      	; 0x612 <DIO_u8GetPinValue+0xa>
 612:	cd b7       	in	r28, 0x3d	; 61
 614:	de b7       	in	r29, 0x3e	; 62
 616:	89 83       	std	Y+1, r24	; 0x01
 618:	6a 83       	std	Y+2, r22	; 0x02
	if((PortID >= 0 && PortID <= 3) && (PinID >= 0 && PinID <= 7))
 61a:	89 81       	ldd	r24, Y+1	; 0x01
 61c:	84 30       	cpi	r24, 0x04	; 4
 61e:	08 f0       	brcs	.+2      	; 0x622 <DIO_u8GetPinValue+0x1a>
 620:	70 c0       	rjmp	.+224    	; 0x702 <DIO_u8GetPinValue+0xfa>
 622:	8a 81       	ldd	r24, Y+2	; 0x02
 624:	88 30       	cpi	r24, 0x08	; 8
 626:	08 f0       	brcs	.+2      	; 0x62a <DIO_u8GetPinValue+0x22>
 628:	6c c0       	rjmp	.+216    	; 0x702 <DIO_u8GetPinValue+0xfa>
	{
		switch(PortID)
 62a:	89 81       	ldd	r24, Y+1	; 0x01
 62c:	28 2f       	mov	r18, r24
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	3d 83       	std	Y+5, r19	; 0x05
 632:	2c 83       	std	Y+4, r18	; 0x04
 634:	4c 81       	ldd	r20, Y+4	; 0x04
 636:	5d 81       	ldd	r21, Y+5	; 0x05
 638:	41 30       	cpi	r20, 0x01	; 1
 63a:	51 05       	cpc	r21, r1
 63c:	49 f1       	breq	.+82     	; 0x690 <DIO_u8GetPinValue+0x88>
 63e:	8c 81       	ldd	r24, Y+4	; 0x04
 640:	9d 81       	ldd	r25, Y+5	; 0x05
 642:	82 30       	cpi	r24, 0x02	; 2
 644:	91 05       	cpc	r25, r1
 646:	34 f4       	brge	.+12     	; 0x654 <DIO_u8GetPinValue+0x4c>
 648:	2c 81       	ldd	r18, Y+4	; 0x04
 64a:	3d 81       	ldd	r19, Y+5	; 0x05
 64c:	21 15       	cp	r18, r1
 64e:	31 05       	cpc	r19, r1
 650:	61 f0       	breq	.+24     	; 0x66a <DIO_u8GetPinValue+0x62>
 652:	57 c0       	rjmp	.+174    	; 0x702 <DIO_u8GetPinValue+0xfa>
 654:	4c 81       	ldd	r20, Y+4	; 0x04
 656:	5d 81       	ldd	r21, Y+5	; 0x05
 658:	42 30       	cpi	r20, 0x02	; 2
 65a:	51 05       	cpc	r21, r1
 65c:	61 f1       	breq	.+88     	; 0x6b6 <DIO_u8GetPinValue+0xae>
 65e:	8c 81       	ldd	r24, Y+4	; 0x04
 660:	9d 81       	ldd	r25, Y+5	; 0x05
 662:	83 30       	cpi	r24, 0x03	; 3
 664:	91 05       	cpc	r25, r1
 666:	d1 f1       	breq	.+116    	; 0x6dc <DIO_u8GetPinValue+0xd4>
 668:	4c c0       	rjmp	.+152    	; 0x702 <DIO_u8GetPinValue+0xfa>
		{
			case PortA:
				return GET_BIT(PINA_REGISTER , PinID);
 66a:	e9 e3       	ldi	r30, 0x39	; 57
 66c:	f0 e0       	ldi	r31, 0x00	; 0
 66e:	80 81       	ld	r24, Z
 670:	28 2f       	mov	r18, r24
 672:	30 e0       	ldi	r19, 0x00	; 0
 674:	8a 81       	ldd	r24, Y+2	; 0x02
 676:	88 2f       	mov	r24, r24
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	a9 01       	movw	r20, r18
 67c:	02 c0       	rjmp	.+4      	; 0x682 <DIO_u8GetPinValue+0x7a>
 67e:	55 95       	asr	r21
 680:	47 95       	ror	r20
 682:	8a 95       	dec	r24
 684:	e2 f7       	brpl	.-8      	; 0x67e <DIO_u8GetPinValue+0x76>
 686:	ca 01       	movw	r24, r20
 688:	58 2f       	mov	r21, r24
 68a:	51 70       	andi	r21, 0x01	; 1
 68c:	5b 83       	std	Y+3, r21	; 0x03
 68e:	3a c0       	rjmp	.+116    	; 0x704 <DIO_u8GetPinValue+0xfc>
			case PortB:
				return GET_BIT(PINB_REGISTER , PinID);
 690:	e6 e3       	ldi	r30, 0x36	; 54
 692:	f0 e0       	ldi	r31, 0x00	; 0
 694:	80 81       	ld	r24, Z
 696:	28 2f       	mov	r18, r24
 698:	30 e0       	ldi	r19, 0x00	; 0
 69a:	8a 81       	ldd	r24, Y+2	; 0x02
 69c:	88 2f       	mov	r24, r24
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	a9 01       	movw	r20, r18
 6a2:	02 c0       	rjmp	.+4      	; 0x6a8 <DIO_u8GetPinValue+0xa0>
 6a4:	55 95       	asr	r21
 6a6:	47 95       	ror	r20
 6a8:	8a 95       	dec	r24
 6aa:	e2 f7       	brpl	.-8      	; 0x6a4 <DIO_u8GetPinValue+0x9c>
 6ac:	ca 01       	movw	r24, r20
 6ae:	58 2f       	mov	r21, r24
 6b0:	51 70       	andi	r21, 0x01	; 1
 6b2:	5b 83       	std	Y+3, r21	; 0x03
 6b4:	27 c0       	rjmp	.+78     	; 0x704 <DIO_u8GetPinValue+0xfc>
			case PortC:
				return GET_BIT(PINC_REGISTER , PinID);
 6b6:	e3 e3       	ldi	r30, 0x33	; 51
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	80 81       	ld	r24, Z
 6bc:	28 2f       	mov	r18, r24
 6be:	30 e0       	ldi	r19, 0x00	; 0
 6c0:	8a 81       	ldd	r24, Y+2	; 0x02
 6c2:	88 2f       	mov	r24, r24
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	a9 01       	movw	r20, r18
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <DIO_u8GetPinValue+0xc6>
 6ca:	55 95       	asr	r21
 6cc:	47 95       	ror	r20
 6ce:	8a 95       	dec	r24
 6d0:	e2 f7       	brpl	.-8      	; 0x6ca <DIO_u8GetPinValue+0xc2>
 6d2:	ca 01       	movw	r24, r20
 6d4:	58 2f       	mov	r21, r24
 6d6:	51 70       	andi	r21, 0x01	; 1
 6d8:	5b 83       	std	Y+3, r21	; 0x03
 6da:	14 c0       	rjmp	.+40     	; 0x704 <DIO_u8GetPinValue+0xfc>
			case PortD:
				return GET_BIT(PIND_REGISTER , PinID);
 6dc:	e0 e3       	ldi	r30, 0x30	; 48
 6de:	f0 e0       	ldi	r31, 0x00	; 0
 6e0:	80 81       	ld	r24, Z
 6e2:	28 2f       	mov	r18, r24
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	8a 81       	ldd	r24, Y+2	; 0x02
 6e8:	88 2f       	mov	r24, r24
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	a9 01       	movw	r20, r18
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <DIO_u8GetPinValue+0xec>
 6f0:	55 95       	asr	r21
 6f2:	47 95       	ror	r20
 6f4:	8a 95       	dec	r24
 6f6:	e2 f7       	brpl	.-8      	; 0x6f0 <DIO_u8GetPinValue+0xe8>
 6f8:	ca 01       	movw	r24, r20
 6fa:	58 2f       	mov	r21, r24
 6fc:	51 70       	andi	r21, 0x01	; 1
 6fe:	5b 83       	std	Y+3, r21	; 0x03
 700:	01 c0       	rjmp	.+2      	; 0x704 <DIO_u8GetPinValue+0xfc>
 702:	02 c0       	rjmp	.+4      	; 0x708 <DIO_u8GetPinValue+0x100>
		}
	}
	else
	{}
	//return 0;
}
 704:	8b 81       	ldd	r24, Y+3	; 0x03
 706:	8e 83       	std	Y+6, r24	; 0x06
 708:	8e 81       	ldd	r24, Y+6	; 0x06
 70a:	26 96       	adiw	r28, 0x06	; 6
 70c:	0f b6       	in	r0, 0x3f	; 63
 70e:	f8 94       	cli
 710:	de bf       	out	0x3e, r29	; 62
 712:	0f be       	out	0x3f, r0	; 63
 714:	cd bf       	out	0x3d, r28	; 61
 716:	cf 91       	pop	r28
 718:	df 91       	pop	r29
 71a:	08 95       	ret

0000071c <DIO_vdTogPortValue>:

//Toggle port value
void DIO_vdTogPortValue(u8 PortID)
{
 71c:	df 93       	push	r29
 71e:	cf 93       	push	r28
 720:	00 d0       	rcall	.+0      	; 0x722 <DIO_vdTogPortValue+0x6>
 722:	0f 92       	push	r0
 724:	cd b7       	in	r28, 0x3d	; 61
 726:	de b7       	in	r29, 0x3e	; 62
 728:	89 83       	std	Y+1, r24	; 0x01
	if(PortID >= 0 && PortID <= 3)
 72a:	89 81       	ldd	r24, Y+1	; 0x01
 72c:	84 30       	cpi	r24, 0x04	; 4
 72e:	08 f0       	brcs	.+2      	; 0x732 <DIO_vdTogPortValue+0x16>
 730:	3e c0       	rjmp	.+124    	; 0x7ae <DIO_vdTogPortValue+0x92>
	{
		switch(PortID)
 732:	89 81       	ldd	r24, Y+1	; 0x01
 734:	28 2f       	mov	r18, r24
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	3b 83       	std	Y+3, r19	; 0x03
 73a:	2a 83       	std	Y+2, r18	; 0x02
 73c:	8a 81       	ldd	r24, Y+2	; 0x02
 73e:	9b 81       	ldd	r25, Y+3	; 0x03
 740:	81 30       	cpi	r24, 0x01	; 1
 742:	91 05       	cpc	r25, r1
 744:	e9 f0       	breq	.+58     	; 0x780 <DIO_vdTogPortValue+0x64>
 746:	2a 81       	ldd	r18, Y+2	; 0x02
 748:	3b 81       	ldd	r19, Y+3	; 0x03
 74a:	22 30       	cpi	r18, 0x02	; 2
 74c:	31 05       	cpc	r19, r1
 74e:	2c f4       	brge	.+10     	; 0x75a <DIO_vdTogPortValue+0x3e>
 750:	8a 81       	ldd	r24, Y+2	; 0x02
 752:	9b 81       	ldd	r25, Y+3	; 0x03
 754:	00 97       	sbiw	r24, 0x00	; 0
 756:	61 f0       	breq	.+24     	; 0x770 <DIO_vdTogPortValue+0x54>
 758:	2a c0       	rjmp	.+84     	; 0x7ae <DIO_vdTogPortValue+0x92>
 75a:	2a 81       	ldd	r18, Y+2	; 0x02
 75c:	3b 81       	ldd	r19, Y+3	; 0x03
 75e:	22 30       	cpi	r18, 0x02	; 2
 760:	31 05       	cpc	r19, r1
 762:	b1 f0       	breq	.+44     	; 0x790 <DIO_vdTogPortValue+0x74>
 764:	8a 81       	ldd	r24, Y+2	; 0x02
 766:	9b 81       	ldd	r25, Y+3	; 0x03
 768:	83 30       	cpi	r24, 0x03	; 3
 76a:	91 05       	cpc	r25, r1
 76c:	c9 f0       	breq	.+50     	; 0x7a0 <DIO_vdTogPortValue+0x84>
 76e:	1f c0       	rjmp	.+62     	; 0x7ae <DIO_vdTogPortValue+0x92>
		{
			case PortA:
				TOG_BYTE(PORTA_REGISTER);
 770:	ab e3       	ldi	r26, 0x3B	; 59
 772:	b0 e0       	ldi	r27, 0x00	; 0
 774:	eb e3       	ldi	r30, 0x3B	; 59
 776:	f0 e0       	ldi	r31, 0x00	; 0
 778:	80 81       	ld	r24, Z
 77a:	80 95       	com	r24
 77c:	8c 93       	st	X, r24
 77e:	17 c0       	rjmp	.+46     	; 0x7ae <DIO_vdTogPortValue+0x92>
				break;
			case PortB:
				TOG_BYTE(PORTB_REGISTER);
 780:	a8 e3       	ldi	r26, 0x38	; 56
 782:	b0 e0       	ldi	r27, 0x00	; 0
 784:	e8 e3       	ldi	r30, 0x38	; 56
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	80 81       	ld	r24, Z
 78a:	80 95       	com	r24
 78c:	8c 93       	st	X, r24
 78e:	0f c0       	rjmp	.+30     	; 0x7ae <DIO_vdTogPortValue+0x92>
				break;
			case PortC:
				TOG_BYTE(PORTC_REGISTER);
 790:	a5 e3       	ldi	r26, 0x35	; 53
 792:	b0 e0       	ldi	r27, 0x00	; 0
 794:	e5 e3       	ldi	r30, 0x35	; 53
 796:	f0 e0       	ldi	r31, 0x00	; 0
 798:	80 81       	ld	r24, Z
 79a:	80 95       	com	r24
 79c:	8c 93       	st	X, r24
 79e:	07 c0       	rjmp	.+14     	; 0x7ae <DIO_vdTogPortValue+0x92>
				break;
			case PortD:
				TOG_BYTE(PORTD_REGISTER);
 7a0:	a2 e3       	ldi	r26, 0x32	; 50
 7a2:	b0 e0       	ldi	r27, 0x00	; 0
 7a4:	e2 e3       	ldi	r30, 0x32	; 50
 7a6:	f0 e0       	ldi	r31, 0x00	; 0
 7a8:	80 81       	ld	r24, Z
 7aa:	80 95       	com	r24
 7ac:	8c 93       	st	X, r24
				break;
		}
	}
	else{}
}
 7ae:	0f 90       	pop	r0
 7b0:	0f 90       	pop	r0
 7b2:	0f 90       	pop	r0
 7b4:	cf 91       	pop	r28
 7b6:	df 91       	pop	r29
 7b8:	08 95       	ret

000007ba <DIO_vdTogPinValue>:

//Toggle pin value
void DIO_vdTogPinValue(u8 PortID, u8 PinID)
{
 7ba:	df 93       	push	r29
 7bc:	cf 93       	push	r28
 7be:	00 d0       	rcall	.+0      	; 0x7c0 <DIO_vdTogPinValue+0x6>
 7c0:	00 d0       	rcall	.+0      	; 0x7c2 <DIO_vdTogPinValue+0x8>
 7c2:	cd b7       	in	r28, 0x3d	; 61
 7c4:	de b7       	in	r29, 0x3e	; 62
 7c6:	89 83       	std	Y+1, r24	; 0x01
 7c8:	6a 83       	std	Y+2, r22	; 0x02
	if(PortID >= 0 && PortID <= 3)
 7ca:	89 81       	ldd	r24, Y+1	; 0x01
 7cc:	84 30       	cpi	r24, 0x04	; 4
 7ce:	08 f0       	brcs	.+2      	; 0x7d2 <DIO_vdTogPinValue+0x18>
 7d0:	6e c0       	rjmp	.+220    	; 0x8ae <__stack+0x4f>
	{
		switch(PortID)
 7d2:	89 81       	ldd	r24, Y+1	; 0x01
 7d4:	28 2f       	mov	r18, r24
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	3c 83       	std	Y+4, r19	; 0x04
 7da:	2b 83       	std	Y+3, r18	; 0x03
 7dc:	8b 81       	ldd	r24, Y+3	; 0x03
 7de:	9c 81       	ldd	r25, Y+4	; 0x04
 7e0:	81 30       	cpi	r24, 0x01	; 1
 7e2:	91 05       	cpc	r25, r1
 7e4:	49 f1       	breq	.+82     	; 0x838 <DIO_vdTogPinValue+0x7e>
 7e6:	2b 81       	ldd	r18, Y+3	; 0x03
 7e8:	3c 81       	ldd	r19, Y+4	; 0x04
 7ea:	22 30       	cpi	r18, 0x02	; 2
 7ec:	31 05       	cpc	r19, r1
 7ee:	2c f4       	brge	.+10     	; 0x7fa <DIO_vdTogPinValue+0x40>
 7f0:	8b 81       	ldd	r24, Y+3	; 0x03
 7f2:	9c 81       	ldd	r25, Y+4	; 0x04
 7f4:	00 97       	sbiw	r24, 0x00	; 0
 7f6:	61 f0       	breq	.+24     	; 0x810 <DIO_vdTogPinValue+0x56>
 7f8:	5a c0       	rjmp	.+180    	; 0x8ae <__stack+0x4f>
 7fa:	2b 81       	ldd	r18, Y+3	; 0x03
 7fc:	3c 81       	ldd	r19, Y+4	; 0x04
 7fe:	22 30       	cpi	r18, 0x02	; 2
 800:	31 05       	cpc	r19, r1
 802:	71 f1       	breq	.+92     	; 0x860 <__stack+0x1>
 804:	8b 81       	ldd	r24, Y+3	; 0x03
 806:	9c 81       	ldd	r25, Y+4	; 0x04
 808:	83 30       	cpi	r24, 0x03	; 3
 80a:	91 05       	cpc	r25, r1
 80c:	e9 f1       	breq	.+122    	; 0x888 <__stack+0x29>
 80e:	4f c0       	rjmp	.+158    	; 0x8ae <__stack+0x4f>
		{
			case PortA:
				TOG_BIT(PORTA_REGISTER, PinID);
 810:	ab e3       	ldi	r26, 0x3B	; 59
 812:	b0 e0       	ldi	r27, 0x00	; 0
 814:	eb e3       	ldi	r30, 0x3B	; 59
 816:	f0 e0       	ldi	r31, 0x00	; 0
 818:	80 81       	ld	r24, Z
 81a:	48 2f       	mov	r20, r24
 81c:	8a 81       	ldd	r24, Y+2	; 0x02
 81e:	28 2f       	mov	r18, r24
 820:	30 e0       	ldi	r19, 0x00	; 0
 822:	81 e0       	ldi	r24, 0x01	; 1
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	02 2e       	mov	r0, r18
 828:	02 c0       	rjmp	.+4      	; 0x82e <DIO_vdTogPinValue+0x74>
 82a:	88 0f       	add	r24, r24
 82c:	99 1f       	adc	r25, r25
 82e:	0a 94       	dec	r0
 830:	e2 f7       	brpl	.-8      	; 0x82a <DIO_vdTogPinValue+0x70>
 832:	84 27       	eor	r24, r20
 834:	8c 93       	st	X, r24
 836:	3b c0       	rjmp	.+118    	; 0x8ae <__stack+0x4f>
				break;
			case PortB:
				TOG_BIT(PORTB_REGISTER, PinID);
 838:	a8 e3       	ldi	r26, 0x38	; 56
 83a:	b0 e0       	ldi	r27, 0x00	; 0
 83c:	e8 e3       	ldi	r30, 0x38	; 56
 83e:	f0 e0       	ldi	r31, 0x00	; 0
 840:	80 81       	ld	r24, Z
 842:	48 2f       	mov	r20, r24
 844:	8a 81       	ldd	r24, Y+2	; 0x02
 846:	28 2f       	mov	r18, r24
 848:	30 e0       	ldi	r19, 0x00	; 0
 84a:	81 e0       	ldi	r24, 0x01	; 1
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	02 2e       	mov	r0, r18
 850:	02 c0       	rjmp	.+4      	; 0x856 <DIO_vdTogPinValue+0x9c>
 852:	88 0f       	add	r24, r24
 854:	99 1f       	adc	r25, r25
 856:	0a 94       	dec	r0
 858:	e2 f7       	brpl	.-8      	; 0x852 <DIO_vdTogPinValue+0x98>
 85a:	84 27       	eor	r24, r20
 85c:	8c 93       	st	X, r24
 85e:	27 c0       	rjmp	.+78     	; 0x8ae <__stack+0x4f>
				break;
			case PortC:
				TOG_BIT(PORTC_REGISTER, PinID);
 860:	a5 e3       	ldi	r26, 0x35	; 53
 862:	b0 e0       	ldi	r27, 0x00	; 0
 864:	e5 e3       	ldi	r30, 0x35	; 53
 866:	f0 e0       	ldi	r31, 0x00	; 0
 868:	80 81       	ld	r24, Z
 86a:	48 2f       	mov	r20, r24
 86c:	8a 81       	ldd	r24, Y+2	; 0x02
 86e:	28 2f       	mov	r18, r24
 870:	30 e0       	ldi	r19, 0x00	; 0
 872:	81 e0       	ldi	r24, 0x01	; 1
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	02 2e       	mov	r0, r18
 878:	02 c0       	rjmp	.+4      	; 0x87e <__stack+0x1f>
 87a:	88 0f       	add	r24, r24
 87c:	99 1f       	adc	r25, r25
 87e:	0a 94       	dec	r0
 880:	e2 f7       	brpl	.-8      	; 0x87a <__stack+0x1b>
 882:	84 27       	eor	r24, r20
 884:	8c 93       	st	X, r24
 886:	13 c0       	rjmp	.+38     	; 0x8ae <__stack+0x4f>
				break;
			case PortD:
				TOG_BIT(PORTD_REGISTER, PinID);
 888:	a2 e3       	ldi	r26, 0x32	; 50
 88a:	b0 e0       	ldi	r27, 0x00	; 0
 88c:	e2 e3       	ldi	r30, 0x32	; 50
 88e:	f0 e0       	ldi	r31, 0x00	; 0
 890:	80 81       	ld	r24, Z
 892:	48 2f       	mov	r20, r24
 894:	8a 81       	ldd	r24, Y+2	; 0x02
 896:	28 2f       	mov	r18, r24
 898:	30 e0       	ldi	r19, 0x00	; 0
 89a:	81 e0       	ldi	r24, 0x01	; 1
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	02 2e       	mov	r0, r18
 8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <__stack+0x47>
 8a2:	88 0f       	add	r24, r24
 8a4:	99 1f       	adc	r25, r25
 8a6:	0a 94       	dec	r0
 8a8:	e2 f7       	brpl	.-8      	; 0x8a2 <__stack+0x43>
 8aa:	84 27       	eor	r24, r20
 8ac:	8c 93       	st	X, r24
				break;
		}
	}
	else{}
}
 8ae:	0f 90       	pop	r0
 8b0:	0f 90       	pop	r0
 8b2:	0f 90       	pop	r0
 8b4:	0f 90       	pop	r0
 8b6:	cf 91       	pop	r28
 8b8:	df 91       	pop	r29
 8ba:	08 95       	ret

000008bc <main>:
#include "Macros.h"
#include <avr/io.h>
#include "DIO_Interface.h"

void main(void)
{
 8bc:	df 93       	push	r29
 8be:	cf 93       	push	r28
 8c0:	cd b7       	in	r28, 0x3d	; 61
 8c2:	de b7       	in	r29, 0x3e	; 62
	DIO_vdSetPintDirection(PortD, PIN4, PIN_OUTPUT);
 8c4:	83 e0       	ldi	r24, 0x03	; 3
 8c6:	64 e0       	ldi	r22, 0x04	; 4
 8c8:	41 e0       	ldi	r20, 0x01	; 1
 8ca:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <DIO_vdSetPintDirection>
	while(1)
	{
		//2.5--15%
		TCCR1A = 0x23;
 8ce:	ef e4       	ldi	r30, 0x4F	; 79
 8d0:	f0 e0       	ldi	r31, 0x00	; 0
 8d2:	83 e2       	ldi	r24, 0x23	; 35
 8d4:	80 83       	st	Z, r24
		TCCR1B = 0x1B;
 8d6:	ee e4       	ldi	r30, 0x4E	; 78
 8d8:	f0 e0       	ldi	r31, 0x00	; 0
 8da:	8b e1       	ldi	r24, 0x1B	; 27
 8dc:	80 83       	st	Z, r24
		OCR1BH=0;
 8de:	e9 e4       	ldi	r30, 0x49	; 73
 8e0:	f0 e0       	ldi	r31, 0x00	; 0
 8e2:	10 82       	st	Z, r1
		OCR1BL=249;
 8e4:	e8 e4       	ldi	r30, 0x48	; 72
 8e6:	f0 e0       	ldi	r31, 0x00	; 0
 8e8:	89 ef       	ldi	r24, 0xF9	; 249
 8ea:	80 83       	st	Z, r24
		OCR1AH=9;
 8ec:	eb e4       	ldi	r30, 0x4B	; 75
 8ee:	f0 e0       	ldi	r31, 0x00	; 0
 8f0:	89 e0       	ldi	r24, 0x09	; 9
 8f2:	80 83       	st	Z, r24
		OCR1AL = 196;
 8f4:	ea e4       	ldi	r30, 0x4A	; 74
 8f6:	f0 e0       	ldi	r31, 0x00	; 0
 8f8:	84 ec       	ldi	r24, 0xC4	; 196
 8fa:	80 83       	st	Z, r24
 8fc:	e8 cf       	rjmp	.-48     	; 0x8ce <main+0x12>

000008fe <_exit>:
 8fe:	f8 94       	cli

00000900 <__stop_program>:
 900:	ff cf       	rjmp	.-2      	; 0x900 <__stop_program>
